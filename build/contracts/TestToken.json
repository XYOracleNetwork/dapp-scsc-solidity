{
  "contractName": "TestToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610498833981016040908152905133600090815260208190529190912055610454806100446000396000f3006080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461007c57806318160ddd14610106578063313ce5671461012d57806370a082311461015857806395d89b4114610186578063a9059cbb1461019b575b600080fd5b34801561008857600080fd5b506100916101e0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cb5781810151838201526020016100b3565b50505050905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561011257600080fd5b5061011b61026b565b60408051918252519081900360200190f35b34801561013957600080fd5b50610142610271565b6040805160ff9092168252519081900360200190f35b34801561016457600080fd5b5061011b73ffffffffffffffffffffffffffffffffffffffff6004351661027a565b34801561019257600080fd5b506100916102a2565b3480156101a757600080fd5b506101cc73ffffffffffffffffffffffffffffffffffffffff600435166024356102fd565b604080519115158252519081900360200190f35b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b505050505081565b60015490565b60045460ff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102635780601f1061023857610100808354040283529160200191610263565b3360009081526020819052604081205482111561031957600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561033b57600080fd5b3360009081526020819052604090205461035b908363ffffffff61040316565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff85168152205461039a908363ffffffff61041516565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008282111561040f57fe5b50900390565b8181018281101561042257fe5b929150505600a165627a7a72305820468ca2e420dbcc1c79a9f160c5eaa5d9a4fefc18461e101d5369d616689025390029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461007c57806318160ddd14610106578063313ce5671461012d57806370a082311461015857806395d89b4114610186578063a9059cbb1461019b575b600080fd5b34801561008857600080fd5b506100916101e0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cb5781810151838201526020016100b3565b50505050905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561011257600080fd5b5061011b61026b565b60408051918252519081900360200190f35b34801561013957600080fd5b50610142610271565b6040805160ff9092168252519081900360200190f35b34801561016457600080fd5b5061011b73ffffffffffffffffffffffffffffffffffffffff6004351661027a565b34801561019257600080fd5b506100916102a2565b3480156101a757600080fd5b506101cc73ffffffffffffffffffffffffffffffffffffffff600435166024356102fd565b604080519115158252519081900360200190f35b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b505050505081565b60015490565b60045460ff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102635780601f1061023857610100808354040283529160200191610263565b3360009081526020819052604081205482111561031957600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561033b57600080fd5b3360009081526020819052604090205461035b908363ffffffff61040316565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff85168152205461039a908363ffffffff61041516565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008282111561040f57fe5b50900390565b8181018281101561042257fe5b929150505600a165627a7a72305820468ca2e420dbcc1c79a9f160c5eaa5d9a4fefc18461e101d5369d616689025390029",
  "sourceMap": "284:181:8:-;;;393:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:70:8;;;;;;;;;;;;;;;;294:10:0;285:8;:20;;;393:70:8;285:20:0;;;;;;;:36;284:181:8;;;;;;",
  "deployedSourceMap": "284:181:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;321:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:83:0;;;;;;;;;;;;;;;;;;;;367:21:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:21:8;;;;;;;;;;;;;;;;;;;;;;;1230:99:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1230:99:0;;;;;;;343:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;343:20:8;;;;707:321:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;707:321:0;;;;;;;;;;;;;;;;;;;;;;;;;;;321:18:8;;;;;;;;;;;;;;-1:-1:-1;;321:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;470:83:0:-;536:12;;470:83;:::o;367:21:8:-;;;;;;:::o;1230:99:0:-;1308:16;;1286:7;1308:16;;;;;;;;;;;;1230:99::o;343:20:8:-;;;;;;;;;;;;;;;-1:-1:-1;;343:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:321:0;809:10;770:4;800:20;;;;;;;;;;;790:30;;;782:39;;;;;;835:17;;;;;827:26;;;;;;892:10;883:8;:20;;;;;;;;;;;:32;;908:6;883:32;:24;:32;:::i;:::-;869:10;860:8;:20;;;;;;;;;;;:55;;;;:20;937:13;;;;;;:25;;955:6;937:25;:17;:25;:::i;:::-;921:13;;;:8;:13;;;;;;;;;;;;:41;;;;973:33;;;;;;;921:13;;982:10;;973:33;;;;;;;;;;-1:-1:-1;1019:4:0;707:321;;;;:::o;1060:116:6:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:6;;;1060:116::o;1238:128::-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./BasicToken.sol\";\n\n\n/**\n * @title TestToken token\n * @dev The decimals are only for visualization purposes.\n * All the operations are done using the smallest and indivisible token unit,\n * just as on Ethereum all the operations are done in wei.\n */\ncontract TestToken is BasicToken {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  constructor(uint initialSupply) BasicToken(initialSupply) public {\n  }\n}\n",
  "sourcePath": "/Users/arietrouw/GitHub/dapp-scsc-solidity/contracts/TestToken.sol",
  "ast": {
    "absolutePath": "/Users/arietrouw/GitHub/dapp-scsc-solidity/contracts/TestToken.sol",
    "exportedSymbols": {
      "TestToken": [
        731
      ]
    },
    "id": 732,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 712,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/arietrouw/GitHub/dapp-scsc-solidity/contracts/BasicToken.sol",
        "file": "./BasicToken.sol",
        "id": 713,
        "nodeType": "ImportDirective",
        "scope": 732,
        "sourceUnit": 109,
        "src": "26:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 714,
              "name": "BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "306:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicToken_$108",
                "typeString": "contract BasicToken"
              }
            },
            "id": 715,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:8"
          }
        ],
        "contractDependencies": [
          108,
          217
        ],
        "contractKind": "contract",
        "documentation": "@title TestToken token\n@dev The decimals are only for visualization purposes.\nAll the operations are done using the smallest and indivisible token unit,\njust as on Ethereum all the operations are done in wei.",
        "fullyImplemented": true,
        "id": 731,
        "linearizedBaseContracts": [
          731,
          108,
          217
        ],
        "name": "TestToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 717,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "321:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 716,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "321:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 719,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "343:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 718,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 721,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "367:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 720,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "367:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "458:5:8",
              "statements": []
            },
            "documentation": null,
            "id": 730,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 726,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "436:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 727,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 725,
                  "name": "BasicToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 108,
                  "src": "425:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BasicToken_$108_$",
                    "typeString": "type(contract BasicToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "425:25:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "405:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:20:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:8"
            },
            "scope": 731,
            "src": "393:70:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 732,
        "src": "284:181:8"
      }
    ],
    "src": "0:466:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/arietrouw/GitHub/dapp-scsc-solidity/contracts/TestToken.sol",
    "exportedSymbols": {
      "TestToken": [
        731
      ]
    },
    "id": 732,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 712,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/arietrouw/GitHub/dapp-scsc-solidity/contracts/BasicToken.sol",
        "file": "./BasicToken.sol",
        "id": 713,
        "nodeType": "ImportDirective",
        "scope": 732,
        "sourceUnit": 109,
        "src": "26:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 714,
              "name": "BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "306:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicToken_$108",
                "typeString": "contract BasicToken"
              }
            },
            "id": 715,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:8"
          }
        ],
        "contractDependencies": [
          108,
          217
        ],
        "contractKind": "contract",
        "documentation": "@title TestToken token\n@dev The decimals are only for visualization purposes.\nAll the operations are done using the smallest and indivisible token unit,\njust as on Ethereum all the operations are done in wei.",
        "fullyImplemented": true,
        "id": 731,
        "linearizedBaseContracts": [
          731,
          108,
          217
        ],
        "name": "TestToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 717,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "321:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 716,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "321:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 719,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "343:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 718,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 721,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "367:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 720,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "367:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "458:5:8",
              "statements": []
            },
            "documentation": null,
            "id": 730,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 726,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 723,
                    "src": "436:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 727,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 725,
                  "name": "BasicToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 108,
                  "src": "425:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BasicToken_$108_$",
                    "typeString": "type(contract BasicToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "425:25:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "405:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:20:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:8"
            },
            "scope": 731,
            "src": "393:70:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 732,
        "src": "284:181:8"
      }
    ],
    "src": "0:466:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-03T23:37:52.750Z"
}