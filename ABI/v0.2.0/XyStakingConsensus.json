{
  "contractName": "XyStakingConsensus",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakeeToStakingIds",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xyoToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "bondedStake",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalActiveStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "govContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerStake",
      "outputs": [
        {
          "name": "totalStake",
          "type": "uint256"
        },
        {
          "name": "activeStake",
          "type": "uint256"
        },
        {
          "name": "cooldownStake",
          "type": "uint256"
        },
        {
          "name": "totalUnstake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "actionType",
          "type": "uint8"
        }
      ],
      "name": "isUnstakeAction",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalVotingStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "cooldownStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "activateStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakingStakerIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakeData",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "stakeBlock",
          "type": "uint256"
        },
        {
          "name": "unstakeBlock",
          "type": "uint256"
        },
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "staker",
          "type": "address"
        },
        {
          "name": "isActivated",
          "type": "bool"
        },
        {
          "name": "isCooledDown",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getAvailableStakerUnstake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingIds",
          "type": "bytes32[]"
        }
      ],
      "name": "withdrawManyStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCooldownStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "totalStakeAndUnstake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "resolveGovernanceAction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerToStakingIds",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockProducerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestChain",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blockChain",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakingStakeeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "penaltyStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        }
      ],
      "name": "numStakeeStakes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requestsById",
      "outputs": [
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "weiMining",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "responseBlockNumber",
          "type": "uint256"
        },
        {
          "name": "requestSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "numStakerStakes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        }
      ],
      "name": "getAvailableStakeeUnstake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "blocks",
      "outputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeeStake",
      "outputs": [
        {
          "name": "totalStake",
          "type": "uint256"
        },
        {
          "name": "activeStake",
          "type": "uint256"
        },
        {
          "name": "cooldownStake",
          "type": "uint256"
        },
        {
          "name": "totalUnstake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "request",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "weiMining",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "xyoSender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "RequestSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "createdAtBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "blockProducer",
          "type": "address"
        }
      ],
      "name": "BlockCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "stakerStake",
          "type": "uint256"
        }
      ],
      "name": "WithdrawClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "request",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "responseBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "responseType",
          "type": "uint8"
        }
      ],
      "name": "Response",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "stakingId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "stakee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "transition",
          "type": "uint8"
        }
      ],
      "name": "StakeEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_blockProducerContract",
          "type": "address"
        },
        {
          "name": "_governanceContract",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestBlock",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "xyoBounty",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardsRequest",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "request",
          "type": "bytes32"
        },
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "xyoSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "submitRequest",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "request",
          "type": "bytes32"
        },
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "xyoSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "submitRequestFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "_requests",
          "type": "bytes32[]"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "responses",
          "type": "bytes"
        },
        {
          "name": "signers",
          "type": "address[]"
        },
        {
          "name": "sigR",
          "type": "bytes32[]"
        },
        {
          "name": "sigS",
          "type": "bytes32[]"
        },
        {
          "name": "sigV",
          "type": "uint8[]"
        }
      ],
      "name": "submitBlock",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "blockForRequest",
      "outputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "supportingDataForRequest",
      "outputs": [
        {
          "name": "supportingData",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numRequests",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numBlocks",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bondId",
          "type": "bytes32"
        },
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "unstakeBonded",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "292:16447:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:16447:15;;;;;;;",
  "deployedSourceMap": "292:16447:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12239:1010;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12239:1010:15;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12239:1010:15;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;;;;;;;;-1:-1:-1;12239:1010:15;;;;-1:-1:-1;12239:1010:15;;;;-1:-1:-1;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;;;;;;;-1:-1:-1;12239:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;;;;;;;-1:-1:-1;12239:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;;;;;;;-1:-1:-1;12239:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;;;;;;;-1:-1:-1;12239:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12239:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12239:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12239:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12239:1010:15;;-1:-1:-1;12239:1010:15;;-1:-1:-1;;;;;12239:1010:15:i;:::-;;;;;;;;;;;;;;;;1015:56:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:56:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1015:56:16;;;;;;;;:::i;308:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:23:16;;;:::i;:::-;;;;-1:-1:-1;;;;;308:23:16;;;;;;;;;;;;;;1745:47:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1745:47:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1745:47:15;;:::i;631:28:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;631:28:16;;;:::i;519:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:31:16;;;:::i;1426:52::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:52:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1426:52:16;-1:-1:-1;;;;;1426:52:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7907:235;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7907:235:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7907:235:16;;;;:::i;:::-;;;;;;;;;;;;;;;;;;17294:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17294:121:16;;;:::i;10917:110::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10917:110:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10917:110:16;;:::i;:::-;;11033:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11033:112:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11033:112:16;;:::i;1260:51::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1260:51:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1260:51:16;;:::i;920:43::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;920:43:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;920:43:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;920:43:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2353:215:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2353:215:15;;;:::i;15699:514:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15699:514:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15699:514:16;-1:-1:-1;;;;;15699:514:16;;:::i;15398:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15398:210:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15398:210:16;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;15398:210:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15398:210:16;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;15398:210:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15398:210:16;;-1:-1:-1;15398:210:16;;-1:-1:-1;;;;;15398:210:16:i;732:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:30:16;;;:::i;13403:780:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13403:780:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13403:780:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13403:780:15;;;;;;;;;;;;;;12017:616:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12017:616:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12017:616:16;;:::i;17127:162::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17127:162:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17127:162:16;-1:-1:-1;;;;;17127:162:16;;:::i;5936:1056::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5936:1056:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5936:1056:16;;;;;;;;;;;;;:::i;1077:56::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1077:56:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1077:56:16;;;;;;;;:::i;3156:1254:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3156:1254:15;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;3156:1254:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3156:1254:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3156:1254:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3156:1254:15;;-1:-1:-1;3156:1254:15;-1:-1:-1;3156:1254:15;:::i;397:44:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;397:44:16;;;:::i;14650:89:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14650:89:15;;;:::i;14547:93::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14547:93:15;;;:::i;2699:356::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2699:356:15;;:::i;10022:182:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10022:182:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10022:182:16;;;;;;;;:::i;801:29:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:29:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;801:29:15;;:::i;960:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:27:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;960:27:15;;:::i;1203:51:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:51:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1203:51:16;;:::i;14707:584::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14707:584:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14707:584:16;;:::i;5086:870:15:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;5086:870:15;;-1:-1:-1;;;;;5086:870:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2037:232::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:232:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2037:232:15;;;;;;;;;;;;;;;;;;;:::i;830:24:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:24:16;;;:::i;16997:125::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16997:125:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16997:125:16;-1:-1:-1;;;;;16997:125:16;;:::i;876:47:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:47:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;876:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;876:47:15;;;;;;;;;;;;;;;;;;;;16056:681;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16056:681:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16056:681:15;;;;;;;:::i;4815:265::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;4815:265:15;;;;;;;;;;;;-1:-1:-1;;;;;4815:265:15;;;;;;;;:::i;16867:125:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16867:125:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16867:125:16;-1:-1:-1;;;;;16867:125:16;;:::i;16304:531::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16304:531:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16304:531:16;-1:-1:-1;;;;;16304:531:16;;:::i;1030:39:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:39:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1030:39:15;;:::i;14377:164::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14377:164:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14377:164:15;;:::i;1368:52:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1368:52:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1368:52:16;-1:-1:-1;;;;;1368:52:16;;:::i;12239:1010:15:-;12620:21;;:40;;;;;;12649:10;12620:40;;;;;;12588:7;;-1:-1:-1;;;;;12620:21:15;;:28;;:40;;;;;;;;;;;;;;:21;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;12620:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12620:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12620:40:15;12611:81;;;;;;;-1:-1:-1;;;;;12611:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;12728:16;:14;:16::i;:::-;12711:33;;12702:71;;;;;-1:-1:-1;;;;;12702:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;12792:16;;12811:1;-1:-1:-1;12783:54:15;;;;;-1:-1:-1;;;;;12783:54:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;12856:16;12902:13;12917:12;12931:9;12942:14;12958:9;12885:83;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12885:83:15;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12885:83:15;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12885:83:15;;;12875:94;;;;;;12856:113;;12979:14;12996:37;13012:9;13023;12996:15;:37::i;:::-;13043:30;;12979:54;;-1:-1:-1;13043:10:15;;:30;;;;;12979:54;;13043:30;;;;12979:54;13043:10;:30;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13043:30:15;13084:55;13103:8;13113:7;13122:4;13128;13134;13084:18;:55::i;:::-;13149:67;13162:13;13177:8;13187:14;13203:12;13149;:67::i;:::-;-1:-1:-1;13234:8:15;12239:1010;-1:-1:-1;;;;;;;;;;12239:1010:15:o;1015:56:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;308:23::-;;;-1:-1:-1;;;;;308:23:16;;:::o;1745:47:15:-;;;;;;;;;;;;;:::o;631:28:16:-;;;;:::o;519:31::-;;;-1:-1:-1;;;;;519:31:16;;:::o;1426:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7907:235::-;8008:4;;8037:10;:45;;;;;;;;;:97;;;-1:-1:-1;8101:33:16;8087:10;:47;;;;;;;;;8037:97;8029:106;7907:235;-1:-1:-1;;7907:235:16:o;17294:121::-;17345:4;17368:40;17391:16;;17368:18;;:22;;:40;;;;:::i;:::-;17361:47;;17294:121;;:::o;10917:110::-;10989:31;11004:9;11015:4;10989:14;:31::i;:::-;10917:110;:::o;11033:112::-;11106:32;11121:9;11132:5;11106:14;:32::i;1260:51::-;;;;;;;;;;;;;:::o;920:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;920:43:16;;;;;;;;;-1:-1:-1;;;920:43:16;;;;;;;;;;:::o;2353:215:15:-;2455:10;:17;2427:7;;2455:22;2451:63;;;-1:-1:-1;2500:3:15;2493:10;;2451:63;2530:10;2541:17;;-1:-1:-1;;2541:19:15;;;2530:31;;;;;;;;;;;;;;2523:38;;2353:215;:::o;15699:514:16:-;15796:4;;;15856:23;15872:6;15856:15;:23::i;:::-;15845:34;-1:-1:-1;15894:6:16;15889:291;15910:3;15906:1;:7;15889:291;;;15934:17;;:::i;:::-;-1:-1:-1;;;;;15964:26:16;;15954:40;15964:26;;;:18;:26;;;;;:29;;15954:9;;:40;15964:26;15991:1;;15964:29;;;;;;;;;;;;;;;;;;15954:40;;;;;;;;;;;;;;;15934:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15934:60:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15934:60:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16012:21:16;:98;;;;-1:-1:-1;16058:11:16;;:36;;;-1:-1:-1;;;;;;;;;;;16058:36:16;;;;;;;;;;;;;;;;;;;;;16098:12;;-1:-1:-1;;;;;16058:11:16;;:15;;:36;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;16058:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16058:36:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16058:36:16;16038:17;;;;:56;16037:73;16012:98;16008:162;;;16144:11;;16130:25;;;;;16008:162;-1:-1:-1;15915:3:16;;15889:291;;;-1:-1:-1;16196:10:16;;15699:514;-1:-1:-1;;;15699:514:16:o;15398:210::-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15507:6;15502:100;15523:10;:17;15519:1;:21;15502:100;;;15561:28;15575:10;15586:1;15575:13;;;;;;;;;;;;;;;;;;15561;:28::i;:::-;15542:3;;15502:100;;;;15398:210;:::o;732:30::-;;;;:::o;13403:780:15:-;13499:21;13534:22;13570:17;13601:14;13629:15;13670:16;;:::i;:::-;-1:-1:-1;13689:23:15;;;;:12;:23;;;;;;;;13670:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13670:42:15;;;;;;-1:-1:-1;;;13670:42:15;;;;;;;;;;-1:-1:-1;13722:455:15;;;13767:15;13785:10;13796:28;13822:1;13796;:21;;;:25;;:28;;;;:::i;:::-;13785:40;;;;;;;;;;;;;;;;;;;-1:-1:-1;13843:12:15;;13839:328;;13891:15;;;;:6;:15;;;;;:29;;13955:30;;;;14018:28;;;;14076:25;;;;14129:23;;;;;13891:29;;-1:-1:-1;13955:30:15;;-1:-1:-1;14018:28:15;-1:-1:-1;14076:25:15;;-1:-1:-1;;;;;;14129:23:15;;-1:-1:-1;13839:328:15;13722:455;;13403:780;;;;;;;;:::o;12017:616:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12101:18;12122:20;;;:9;:20;;;;;12161:24;12132:9;12161:13;:24::i;:::-;12160:25;12152:74;;;;-1:-1:-1;;;;;12152:74:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12244:11;;;;-1:-1:-1;;;;;12244:11:16;12259:10;12244:25;12236:73;;;;-1:-1:-1;;;;;12236:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12347:11;;:34;;;-1:-1:-1;;;;;;;;;;;12347:34:16;;;;;;;;;;;;;;;;;;;;;12385:12;;12327:55;;-1:-1:-1;;;;;12347:11:16;;;;:15;;:34;;;;;;;;;;;:11;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;12347:34:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:34:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12347:34:16;12327:15;;;;;:55;:19;:55;:::i;:::-;:70;12319:108;;;;;-1:-1:-1;;;;;12319:108:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12445:17;;;;:22;12437:52;;;;;-1:-1:-1;;;;;12437:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12499:26;12520:4;12499:20;:26::i;:::-;12562:11;;12575;;;;12588;;;;;12540:86;;;;;;;;;;;;;-1:-1:-1;;;;;12575:11:16;;;12540:86;;;;12588:11;;12540:86;;;;;;;;;;;;;;;;;;2631:1;12017:616;:::o;17127:162::-;-1:-1:-1;;;;;17252:19:16;17194:4;17252:19;;;:11;:19;;;;;:30;;17217:32;;;;;:65;;17127:162::o;5936:1056::-;6149:11;;:27;;;;;;-1:-1:-1;;;;;6149:27:16;;;;;;;;;6084:12;;;;;;6149:11;;;:19;;:27;;;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;6149:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6149:27:16;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6149:27:16;;;;;;;;;;;;;;;-1:-1:-1;6149:27:16;;-1:-1:-1;6149:27:16;-1:-1:-1;6206:4:16;6194:16;;;;6186:52;;;;;-1:-1:-1;;;;;6186:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:31;6278:10;:45;;;;;;;;;6274:570;;;6339:64;6364:6;6372:10;6384:9;6395:7;6339:24;:64::i;:::-;6274:570;;;6438:33;6424:10;:47;;;;;;;;;6420:424;;;6530:58;6555:6;6563:10;6575:9;6586:1;6530:24;:58::i;:::-;6633:21;;:36;;;;;;-1:-1:-1;;;;;6633:36:16;;;;;;;;;:21;;;;;:28;;:36;;;;;:21;;:36;;;;;;;:21;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6633:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6633:36:16;;;;6420:424;;;6704:30;6690:10;:44;;;;;;;;;6686:158;;;6750:21;;:36;;;;;;-1:-1:-1;;;;;6750:36:16;;;;;;;;;:21;;;;;:28;;:36;;;;;:21;;:36;;;;;;;:21;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6750:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6800:11:16;;:33;;;;;;-1:-1:-1;;;;;6800:33:16;;;;;;;;;:11;;;;;-1:-1:-1;6800:25:16;;-1:-1:-1;6800:33:16;;;;;:11;;:33;;;;;;;:11;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6800:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6800:33:16;;;;6686:158;6859:27;6875:10;6859:15;:27::i;:::-;:67;;;;-1:-1:-1;;;;;;6890:19:16;;;;;;:11;:19;;;;;:31;;;:36;6859:67;6855:131;;;6942:11;;:33;;;;;;-1:-1:-1;;;;;6942:33:16;;;;;;;;;:11;;;;;:25;;:33;;;;;:11;;:33;;;;;;;:11;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6942:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6942:33:16;;;;6855:131;5936:1056;;;;;;:::o;1077:56::-;;;;;;;;;;;;;;;;;;;;3156:1254:15;3347:8;;-1:-1:-1;;;;;3347:8:15;3333:10;:22;3324:56;;;;;-1:-1:-1;;;;;3324:56:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:11;3404:17;3436:10;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3425:37:15;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3425:37:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3425:37:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3425:37:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3390:72:15;;-1:-1:-1;3425:37:15;;-1:-1:-1;;;3495:1:15;3485:11;;3481:923;;-1:-1:-1;3481:923:15;;-1:-1:-1;;;3481:923:15;3513:14;3529;3558:4;3547:36;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3547:36:15;;;;;;;;;-1:-1:-1;3547:36:15;-1:-1:-1;3597:43:15;3607:8;3547:36;;3633:6;3597:9;:43::i;:::-;;3481:923;;;;;3661:6;3671:1;3661:11;3657:747;;;3690:15;3707:14;3723:17;3742;3774:4;3763:49;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;3763:49:15;;;;;;;;;;;;;;;;;-1:-1:-1;3763:49:15;-1:-1:-1;3763:49:15;;-1:-1:-1;3763:49:15;-1:-1:-1;3826:71:15;3844:8;3763:49;;;;3826:17;:71::i;:::-;3657:747;;;;;;;3918:6;3928:1;3918:11;3914:490;;;3946:24;3972;3998:21;4034:4;4023:48;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4023:48:15;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4023:48:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4023:48:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4023:48:15;;;;;;3945:126;;;;;;4085:50;4099:8;4109:7;4118;4127;4085:13;:50::i;3914:490::-;4156:6;4166:1;4156:11;4152:252;;;4184:14;4200;4216:24;4242:21;4278:4;4267:55;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4267:55:15;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4267:55:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4267:55:15;;;;;;4183:139;;;;;;;;4336:57;4350:6;4358:8;4368:6;4376:7;4385;4336:13;:57::i;:::-;4152:252;;;;;3156:1254;;;;;;;:::o;397:44:16:-;;;-1:-1:-1;;;;;397:44:16;;:::o;14650:89:15:-;14715:10;:17;14650:89;:::o;14547:93::-;14614:12;:19;14547:93;:::o;2699:356::-;2869:53;;;2886:10;2869:53;;;;;;;;;;;;;;;;;2909:12;2869:53;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2869:53:15;;;;;;;2859:64;;;;;;;-1:-1:-1;;2933:89:15;;2859:64;;2869:53;;2987:33;2933:13;:89::i;10022:182:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;10118:7;;-1:-1:-1;;;;;2567:11:16;;:15;;:27;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10148:49;10158:10;10170;10182:6;10190;10148:9;:49::i;:::-;10141:56;10022:182;-1:-1:-1;;;10022:182:16:o;801:29:15:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;801:29:15;:::o;960:27::-;;;;;;;;;;;1203:51:16;;;;;;;;;;;;;:::o;14707:584::-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;14794:18;14815:20;;;:9;:20;;;;;14854:24;14825:9;14854:13;:24::i;:::-;14853:25;14845:66;;;;;-1:-1:-1;;;;;14845:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;14929:11;;14961;;;;14929:44;;;;;;-1:-1:-1;;;;;14961:11:16;;;14929:44;;;;;;:11;;;;;:31;;:44;;;;;;;;;;;;;;:11;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;14929:44:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14929:44:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14929:44:16;:53;14921:104;;;;-1:-1:-1;;;;;14921:104:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15063:1;15043:4;:17;;;:21;:98;;;;-1:-1:-1;15089:11:16;;:36;;;-1:-1:-1;;;;;;;;;;;15089:36:16;;;;;;;;;;;;;;;;;;;;;15129:12;;-1:-1:-1;;;;;15089:11:16;;:15;;:36;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;15089:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15089:36:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15089:36:16;15069:17;;;;:56;15068:73;15043:98;15035:133;;;;;;;-1:-1:-1;;;;;15035:133:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15186:11;;;;-1:-1:-1;;;;;15186:11:16;15201:10;15186:25;15178:61;;;;;-1:-1:-1;;;;;15178:61:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15249:35;15268:9;15279:4;15249:18;:35::i;5086:870:15:-;5309:21;;;;:12;:21;;;;;:31;;;:36;5300:77;;;;;-1:-1:-1;;;;;5300:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5388:45;5412:9;5423;5388:23;:45::i;:::-;5444:16;;:::i;:::-;5463:321;;;;;;;;;5485:9;5463:321;;;;5523:9;5463:321;;;;5569:12;5463:321;;;;5611:1;5463:321;;;;5672:4;-1:-1:-1;;;;;5463:321:15;;;;;5740:11;5463:321;;;;;5444:340;;5819:1;5795:12;:21;5808:7;5795:21;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5795:25:15;;;;;-1:-1:-1;;;;;5795:25:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:12;5848:7;5830:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5830:26:15;;;;;;;;;;;;;;;;;;;;;;5872:77;5889:7;5898:9;5909;5920:4;5926:9;5937:11;5872:77;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5872:77:15;-1:-1:-1;;;;;5872:77:15;;;;;;-1:-1:-1;;;;;5872:77:15;-1:-1:-1;;;;;5872:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5086:870;;;;;;:::o;2037:232::-;1024:12:29;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:29;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:29;;;;-1:-1:-1;;1195:18:29;;;;;;;;1152:12;;;2205:57:15;2210:6;2218:22;2242:19;2205:4;:57::i;:::-;1228:12:29;:30;;;;;;;-1:-1:-1;;1228:30:29;;;;;;;;;-1:-1:-1;;;2037:232:15:o;830:24:16:-;;;;:::o;16997:125::-;-1:-1:-1;;;;;17082:26:16;17059:4;17082:26;;;:18;:26;;;;;:33;;16997:125::o;876:47:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;876:47:15;;;-1:-1:-1;;;876:47:15;;;;;:::o;16056:681::-;16202:11;;:33;;;-1:-1:-1;;;;;;;;;;;16202:33:15;;;;;;;;;;;;;;;;;;;;;16171:20;;-1:-1:-1;;;;;16202:11:15;;:15;;:33;;;;;;;;;;;:11;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;16202:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16202:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16202:33:15;;-1:-1:-1;16254:10:15;-1:-1:-1;;;;;16254:26:15;;;16246:62;;;;;-1:-1:-1;;;;;16246:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;16326:11;;;;;:47;;-1:-1:-1;16351:22:15;;;;:11;:22;;;;;;16341:32;;16326:47;16318:89;;;;;;;-1:-1:-1;;;;;16318:89:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;16417:18;16438:20;;;:9;:20;;;;;16472:17;;;;:20;16468:182;;;16508:26;16529:4;16508:20;:26::i;:::-;16575:11;;16588;;;;16601;;;;;16553:86;;;;;;;;;;;;;-1:-1:-1;;;;;16588:11:15;;;16553:86;;;;16601:11;;16553:86;;;;;;;;;;;;;;;;;;16468:182;16659:35;16678:9;16689:4;16659:18;:35::i;:::-;-1:-1:-1;;16729:1:15;16704:22;;;:11;:22;;;;;:26;-1:-1:-1;16056:681:15:o;4815:265::-;5000:73;5018:10;5030:7;5039:9;5050;5061:11;5000:17;:73::i;:::-;4815:265;;;;:::o;16867:125:16:-;-1:-1:-1;;;;;16952:26:16;16929:4;16952:26;;;:18;:26;;;;;:33;;16867:125::o;16304:531::-;-1:-1:-1;;;;;16450:26:16;;16401:4;16450:26;;;:18;:26;;;;;;;;16421:55;;;;;;;;;;;;;;;;;:26;;:55;;16450:26;16421:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16421:55:16;;-1:-1:-1;16486:15:16;;-1:-1:-1;16486:15:16;;-1:-1:-1;;;16515:287:16;16536:9;:16;16532:1;:20;16515:287;;;16573:17;;:::i;:::-;16593:9;:23;16603:9;16613:1;16603:12;;;;;;;;;;;;;;;;;;;;16593:23;;;;;;;;;;;;;-1:-1:-1;16593:23:16;;;16573:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16573:43:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16573:43:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16634:21:16;:98;;;;-1:-1:-1;16680:11:16;;:36;;;-1:-1:-1;;;;;;;;;;;16680:36:16;;;;;;;;;;;;;;;;;;;;;16720:12;;-1:-1:-1;;;;;16680:11:16;;:15;;:36;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;16680:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16680:36:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16680:36:16;16660:17;;;;:56;16659:73;16634:98;16630:162;;;16766:11;;16752:25;;;;;16630:162;-1:-1:-1;16554:3:16;;16515:287;;;-1:-1:-1;16818:10:16;16304:531;-1:-1:-1;;;16304:531:16:o;1030:39:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:39:15;;:::o;14377:164::-;14451:22;14508:26;14524:9;14508:15;:26::i;:::-;-1:-1:-1;14485:49:15;;14377:164;-1:-1:-1;;;;;14377:164:15:o;1368:52:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7782:1879:15:-;7922:4;;;;7999:1621;8020:9;:16;8016:1;:20;7999:1621;;;8057:17;8077:12;:26;8090:9;8100:1;8090:12;;;;;;;;;;;;;;;;;;8077:26;;;;;;;;;;;8057:46;;8140:1;8126;:11;;;:15;8117:65;;;;;;-1:-1:-1;;;;;8117:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8212:13;;;;8196;;8212:62;-1:-1:-1;;;8212:13:15;;;;8235:38;8212:62;;:144;;-1:-1:-1;8326:29:15;8303:13;;;;-1:-1:-1;;;8303:13:15;;:53;:13;:53;8212:144;:153;;8363:2;8212:153;;;8359:1;8212:153;8196:169;;;;8404:18;8420:1;8404:11;:9;:11::i;:::-;:15;:18;:15;:18;:::i;:::-;8380:21;;;:42;8462:11;;;;8448:26;;:9;;:26;:13;:26;:::i;:::-;8493:13;;;;8436:38;;-1:-1:-1;8493:57:15;-1:-1:-1;;;8493:13:15;;;;8516:33;8493:57;8489:1085;;;8570:11;8584:49;8601:9;8612:10;8624:8;8584:16;:49::i;:::-;8691:15;;;;8570:63;;-1:-1:-1;8670:37:15;;-1:-1:-1;;;;;8691:15:15;8670:20;:37::i;:::-;8660:47;;;8651:107;;;;-1:-1:-1;;;;;8651:107:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8797:15;;;;8781:79;;-1:-1:-1;;;;;8797:15:15;8814:6;8822:37;8797:15;8822:20;:37::i;:::-;8781:79;;;-1:-1:-1;;;;;8781:79:15;;;;;;;;;;;;;;;;;;;;;;;;;8897:8;;8907:15;;;;8878:53;;-1:-1:-1;;;;;8897:8:15;;;;8907:15;8924:6;8878:18;:53::i;:::-;8489:1085;;;;8970:19;9002:8;8992:19;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;8992:19:15;87:34:-1;135:17;;-1:-1;8992:19:15;-1:-1:-1;8970:41:15;-1:-1:-1;9034:6:15;9029:114;9050:8;9046:1;:12;9029:114;;;9099:9;9122:1;9109:10;:14;9099:25;;;;;;;;;;;;;;;;;;;;9087:6;9094:1;9087:9;;;;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;9060:3:15;;9029:114;;;-1:-1:-1;9164:13:15;;;;:62;-1:-1:-1;;;9164:13:15;;;;9187:38;9164:62;;:149;;-1:-1:-1;9251:13:15;;;;:62;-1:-1:-1;;;9251:13:15;;;;9274:38;9251:62;9164:149;9160:277;;;9350:15;;;;9382:12;;-1:-1:-1;;;;;9350:15:15;;;;9337:44;;9382:9;;9392:1;;9382:12;;;;;;;;;;;;;;9396:1;:13;;;;;;;;;;;;9411:6;9337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9337:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9337:81:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9337:81:15;;;;9160:277;9460:99;9469:9;9479:1;9469:12;;;;;;;;;;;;;;;;;;9483:1;:21;;;9506:37;9523:6;9531:1;9534:8;9506:16;:37::i;:::-;9545:13;;;;9460:99;;;;;;;;;;;;;;;;;;;;9545:13;-1:-1:-1;;;9545:13:15;;;;9460:99;;;;;;;;;;;;;8489:1085;;9587:22;;;;;-1:-1:-1;8038:3:15;;7999:1621;;;-1:-1:-1;9645:9:15;7782:1879;-1:-1:-1;;;;7782:1879:15:o;10028:974::-;10299:65;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;10299:65:15;;;;;;;10289:76;;;;;10266:20;;;10440:387;10461:7;:14;10457:1;:18;10440:387;;;10496:14;10513:50;10523:12;10537:4;10542:1;10537:7;;;;;;;;;;;;;;;;;;10546:4;10551:1;10546:7;;;;;;;;;;;;;;;;;;10555:4;10560:1;10555:7;;;;;;;;;;;;;;;;;;10513:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10513:50:15;;;;;;;;10496:67;;10598:10;-1:-1:-1;;;;;10585:23:15;:7;10593:1;10585:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10585:23:15;;10577:68;;;;;-1:-1:-1;;;;;10577:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10672:7;10680:1;10672:10;;;;;;;;;;;;;;;;;;10659:23;;10718:6;-1:-1:-1;;;;;10704:20:15;:7;10712:1;10704:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10704:20:15;;10696:52;;;;;-1:-1:-1;;;;;10696:52:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10780:23:15;;;;;;:11;:23;;;;;:35;;;10770:46;;:5;;:46;:9;:46;:::i;:::-;10762:54;-1:-1:-1;;10477:3:15;;10440:387;;;-1:-1:-1;10928:11:15;;:36;;;-1:-1:-1;;;;;;;;;;;10928:36:15;;;;;;;;;;;;;;;;;;;;;10907:67;;10970:3;;10907:58;;-1:-1:-1;;;;;10928:11:15;;;;:15;;:36;;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;10928:36:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10928:36:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10928:36:15;10907:16;;;:58;:20;:58;:::i;:::-;:62;:67;:62;:67;:::i;:::-;10899:75;;10890:105;;;;;-1:-1:-1;;;;;10890:105:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10028:974;;;;;;;;:::o;11008:384::-;11132:14;;:::i;:::-;11149:77;;;;;;;;;11155:13;11149:77;;;;11170:14;11149:77;;;;11186:12;11149:77;;;;11200:12;11149:77;;;;11215:10;-1:-1:-1;;;;;11149:77:15;;;;11132:94;;11236:10;11252:8;11236:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11236:25:15;;;;;;;;;;;;;;;;;;;;;;11290:1;11271:6;:16;11278:8;11271:16;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11271:20:15;;;;;-1:-1:-1;;;;;11271:20:15;;;;;;;;;11306:79;11319:8;11329:13;11344:14;11360:12;11374:10;11306:79;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11306:79:15;-1:-1:-1;;;;;11306:79:15;;;;;;;;;;;;;;;;;;;11008:384;;;;;:::o;1345:142:30:-;1430:7;;;1454;;;;1447:15;;;11274:618:16;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11384:18;11405:34;11429:9;11405:23;:34::i;:::-;11457:17;;;;;;-1:-1:-1;11457:17:16;;;;;:26;;;:55;;-1:-1:-1;11487:16:16;;;;-1:-1:-1;;;11487:16:16;;;;:25;11457:55;11449:92;;;;;;;-1:-1:-1;;;;;11449:92:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11559:21;;11588:11;;;;11559:41;;;;;;-1:-1:-1;;;;;11588:11:16;;;11559:41;;;;;;:53;;;;:21;;;;;:28;;:41;;;;;;;;;;;;;;;:21;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;11559:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11559:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11559:41:16;:53;;;;11551:84;;;;;-1:-1:-1;;;;;11551:84:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11645:17;;;:28;;-1:-1:-1;;11645:28:16;;;;;;;;;;;;-1:-1:-1;;11683:28:16;-1:-1:-1;;;11683:28:16;;;;;;;;11721:27;;;;;;;;;;;;-1:-1:-1;11721:27:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11721:27:16;;;;;;;;;;;;;11645:28;11721:27;;;;;;;;;;;;;;;;;;;;;;:21;:27::i;:::-;11785:11;;11810;;;;11763:122;;11774:9;;11798:10;;-1:-1:-1;;;;;11810:11:16;11823:8;:61;;11859:25;11823:61;;;11834:22;11823:61;11763:122;;;;;;;;;;;;;;-1:-1:-1;;;;;11763:122:16;-1:-1:-1;;;;;11763:122:16;;;;;;-1:-1:-1;;;;;11763:122:16;-1:-1:-1;;;;;11763:122:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;11274:618;;:::o;1149:126:30:-;1209:7;1235:8;;;;1228:16;;;;-1:-1:-1;1261:7:30;;;1149:126::o;14870:122:15:-;14935:4;14958:22;;;:11;:22;;;;;;:27;;;14870:122::o;4162:389:16:-;4228:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4228:24:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4228:24:16;;;;;;;;;;;;;;;;;;;;;;;:11;:24::i;:::-;4338:8;;4311;;;;;-1:-1:-1;;;;;4311:8:16;4338;4299:21;;;:11;:21;;;;;:34;;:48;;;:38;:48;:::i;:::-;4274:8;;;;;-1:-1:-1;;;;;4274:8:16;;;4262:21;;;;:11;:21;;;;;;;;:34;;:85;;;;4433:8;;4406;;;;;;;4394:21;;:11;:21;;;;;;:34;;:48;;;:38;:48;:::i;:::-;4369:8;;;;;-1:-1:-1;;;;;4369:8:16;4357:21;;;;:11;:21;;;;;:34;;:85;;;;4452:21;;-1:-1:-1;;4483:22:16;;;4532:12;4515:14;;;;:29;4162:389::o;6998:808::-;7181:10;7167:633;7209:10;7197:9;:22;7193:1;:26;7167:633;;;-1:-1:-1;;;;;7260:26:16;;7240:17;7260:26;;;:18;:26;;;;;:29;;7287:1;;7260:29;;;;;;;;;;;;;;;;;;7324:20;;;:9;:20;;;;;;;7362:17;;;;7260:29;;-1:-1:-1;7324:20:16;7362:22;7358:432;;;7418:1;7408:7;:11;7404:219;;;7443:18;7464:33;7493:3;7464:24;7476:4;:11;;;7464:7;:11;;:24;;;;:::i;:33::-;7519:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7519:32:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7519:32:16;;;;;;;;;;;;;;;;;;;;;7443:54;;-1:-1:-1;7519:32:16;;7443:54;7519:11;:32::i;:::-;7573:12;;:31;;7590:13;7573:31;:16;:31;:::i;:::-;;7404:219;;7640:26;7661:4;7640:20;:26::i;:::-;7711:11;;7724;;;;7737;;;;;7689:86;;;;;;;;;;;;;-1:-1:-1;;;;;7724:11:16;;;7689:86;;;;7737:11;;7689:86;;;;;;;;;;;;;;;;;;7358:432;-1:-1:-1;;7221:3:16;;7167:633;;;;6998:808;;;;:::o;8416:1390::-;8708:8;;8575:7;;8685:64;;-1:-1:-1;;;;;8708:8:16;8718:7;8735:4;8742:6;8685:22;:64::i;:::-;8768:11;;:39;;;;;;-1:-1:-1;;;;;8768:39:16;;;;;;;;;:11;;;;;:31;;:39;;;;;;;;;;;;;;:11;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;8768:39:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8768:39:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8768:39:16;:48;8760:99;;;;-1:-1:-1;;;;;8760:99:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:46;;;-1:-1:-1;;;;;8938:46:16;;;;;;;;;;;;;;;;;;;;;;;8971:12;8938:46;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8938:46:16;;;;;;;8928:57;;;;;8995:17;;:::i;:::-;-1:-1:-1;9015:304:16;;;;;;;;;;;9072:12;9015:304;;;;-1:-1:-1;9015:304:16;;;;;;-1:-1:-1;;;;;9015:304:16;;;;;;;;;;;;;;;;;;;;;;;;;;9338:24;9015:304;9338:18;:24::i;:::-;-1:-1:-1;;;;;9439:26:16;;;;;;;:18;:26;;;;;;;;:33;;9407:29;;;:18;:29;;;;;:65;;;39:1:-1;23:18;;;45:23;;9482:42:16;;;;;;;;;;9566:26;;;;;;:18;:26;;;;;:33;;9534:29;;;:18;:29;;;;;:65;;;23:18:-1;;;45:23;;9609:42:16;;;;;;;;;;9661:20;;;:9;:20;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9661:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9661:27:16;;;-1:-1:-1;;;9661:27:16;-1:-1:-1;;9661:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9704:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9790:9:16;8416:1390;-1:-1:-1;;;;;8416:1390:16:o;8148:262::-;8288:6;8283:121;8304:7;:14;8300:1;:18;8283:121;;;8339:54;8349:7;8358;8366:1;8358:10;;;;;;;;;;;;;;;;;;8370:7;8378:1;8370:10;;;;;;;;;;;;;;;;;;8382:7;8390:1;8382:10;;;;;;;;;;;;;;;;;;8339:9;:54::i;:::-;-1:-1:-1;8320:3:16;;8283:121;;15307:544:15;15536:14;;15518;;:32;15510:55;;;;;-1:-1:-1;;;;;15510:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;15580:6;15575:270;15596:7;:14;15592:1;:18;15575:270;;;15631:17;15651:49;15661:6;15669;15677:7;15685:1;15677:10;;;;;;;;;;;;;;;;;;15689:7;15697:1;15689:10;;;;;;;;;15651:49;15714:22;;;;:11;:22;;;;;:31;;;15785:21;;15814:10;;15631:69;;-1:-1:-1;15759:75:15;;15631:69;;-1:-1:-1;;;;;15785:21:15;;:28;;15814:7;;15822:1;;15814:10;;;;;;;;;;;;;;15785:40;;;;;;;;;;;;;-1:-1:-1;;;;;15785:40:15;-1:-1:-1;;;;;15785:40:15;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15785:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15785:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15785:40:15;:48;;15829:4;15785:48;;15759:14;:75::i;:::-;-1:-1:-1;15612:3:15;;15575:270;;14173:395:16;14259:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14259:27:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14259:27:16;;;;;;;;;;;;;;;;;;;;;;;:21;:27::i;:::-;14315:8;;14337:11;;14296:53;;-1:-1:-1;;;;;14315:8:16;;14325:10;;14296:18;:53::i;:::-;14386:11;;14399;;;;;14412;;;;14364:86;;;;;;;;;;;;;-1:-1:-1;;;;;14399:11:16;;;14364:86;;;;14412:11;;14364:86;;;;;;;;;;;;;;;;;;;;;14460:27;14477:9;14460:16;:27::i;:::-;14497;14514:9;14497:16;:27::i;:::-;-1:-1:-1;14541:20:16;;;;:9;:20;;;;;14534:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14534:27:16;;;;;;;-1:-1:-1;;14534:27:16;;;14173:395::o;6201:569:15:-;6321:11;;:33;;;-1:-1:-1;;;;;;;;;;;6321:33:15;;;;;;;;;;;;;;;;;;;;;6301:17;;-1:-1:-1;;;;;6321:11:15;;:15;;:33;;;;;;;;;;;:11;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6321:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6321:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6321:33:15;6381:11;;:40;;;-1:-1:-1;;;;;;;;;;;6381:40:15;;6321:33;6381:40;;;;;;;;;;;;;;;;;;6321:33;;-1:-1:-1;6364:14:15;;-1:-1:-1;;;;;6381:11:15;;;;:15;;:40;;;;;6321:33;;6381:40;;;;;;:11;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6381:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6381:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6381:40:15;;-1:-1:-1;6450:1:15;6435:16;;6431:116;;;6476:9;:25;-1:-1:-1;6476:25:15;6467:69;;;;;-1:-1:-1;;;;;6467:69:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6572:1;6560:9;:13;:30;;;;6589:1;6577:9;:13;6560:30;6556:208;;;6615:22;;;;6606:64;;;;;-1:-1:-1;;;;;6606:64:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6707:8;;6684:69;;-1:-1:-1;;;;;6707:8:15;6717:9;6736:4;6743:9;6684:22;:69::i;1349:467:29:-;1782:7;1770:20;1804:7;1349:467;:::o;2911:292:16:-;3056:8;:17;;-1:-1:-1;;;;;3056:17:16;;;-1:-1:-1;;3056:17:16;;;;;;;3083:21;:56;;;;;;;;;;;;;;;3149:11;:47;;;;;;;;;;;2911:292::o;7053:312:15:-;7150:7;7204:8;7195:6;:17;7177:6;:13;:36;;7169:45;;;;;;;;-1:-1:-1;;7292:30:15;7308:4;7292:30;7286:37;;7053:312::o;928:162:25:-;1015:5;-1:-1:-1;;;;;1002:28:25;;1031:2;1035:6;1002:40;;;;;;;;;;;;;-1:-1:-1;;;;;1002:40:25;-1:-1:-1;;;;;1002:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:40:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1002:40:25;;;;1054:14;:12;:14::i;:::-;1046:40;;;;;;;-1:-1:-1;;;;;1046:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:162;;;:::o;218:420:30:-;278:9;520:7;;516:46;;;-1:-1:-1;550:1:30;543:8;;516:46;-1:-1:-1;576:7:30;;;581:2;576;:7;600:6;;;;;;;;:12;593:20;;;728:301;788:7;1020:2;1015;:7;;;;;;;;;728:301;-1:-1:-1;;;728:301:30:o;10214:512:16:-;10304:13;10354:20;;;:9;:20;;;;;10389:24;10364:9;10389:13;:24::i;:::-;10388:25;10384:247;;;10437:11;;;;-1:-1:-1;;;;;10437:11:16;10452:10;10437:25;10429:66;;;;;-1:-1:-1;;;;;10429:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10535:11;;:34;;;-1:-1:-1;;;;;;;;;;;10535:34:16;;;;;;;;;;;;;;;;;;;;;10572:12;;-1:-1:-1;;;;;10535:11:16;;:15;;:34;;;;;;;;;;;:11;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;10535:34:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10535:34:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10535:34:16;10517:15;;;;:52;:67;10509:111;;;;;-1:-1:-1;;;;;10509:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10648:17;;;;:22;10640:58;;;;;-1:-1:-1;;;;;10640:58:16;;;;;;;;;;;;;;;;;;;;;;;;;;;3511:646;3581:1;:14;;;3577:574;;;3689:8;;3661;;;;-1:-1:-1;;;;;3649:21:16;3689:8;3649:21;;;:11;:21;;;;;:35;;;:49;;;:39;:49;:::i;:::-;3623:8;;;;-1:-1:-1;;;;;3611:21:16;;;;;;;:11;:21;;;;;;;;:35;;;;:87;;;;3790:8;;3762;;;;3750:21;;;;;:11;:21;;;;;:35;;;;:49;;;:39;:49;:::i;:::-;3724:8;;;;-1:-1:-1;;;;;3712:21:16;;;;;:11;:21;;;;;:35;;:87;3857:8;;3834:18;;:32;;;:22;:32;:::i;:::-;3813:18;:53;3577:574;;;3971:8;;3945;;;;-1:-1:-1;;;;;3933:21:16;3971:8;3933:21;;;:11;:21;;;;;:33;;;:47;;;:37;:47;:::i;:::-;3909:8;;;;-1:-1:-1;;;;;3897:21:16;;;;;;;:11;:21;;;;;;;;:33;;;;:83;;;;4068:8;;4042;;;;4030:21;;;;;:11;:21;;;;;:33;;;;:47;;;:37;:47;:::i;:::-;4006:8;;;;-1:-1:-1;;;;;3994:21:16;;;;;:11;:21;;;;;:33;;:83;4131:8;;4110:16;;:30;;;:20;:30;:::i;:::-;4091:16;:49;3511:646;:::o;4816:852::-;4934:8;;;;-1:-1:-1;;;;;4922:21:16;;;;;:11;:21;;;;;:32;:46;;4959:8;4922:46;:36;:46;:::i;:::-;4899:8;;;;-1:-1:-1;;;;;4887:21:16;;;;;;;:11;:21;;;;;;;;:81;;;;5025:8;;;;5013:21;;;;;:11;:21;;;;:32;:46;;5050:8;5013:46;:36;:46;:::i;:::-;4990:8;;;;-1:-1:-1;;;;;4978:21:16;;;;;:11;:21;;;;;:81;5073:13;;;;5069:593;;;5150:8;;;;-1:-1:-1;;;;;5138:21:16;;;;;:11;:21;;;;;:33;;;:47;;5176:8;5138:47;:37;:47;:::i;:::-;5114:8;;;;-1:-1:-1;;;;;5102:21:16;;;;;;;:11;:21;;;;;;;;:33;;;;:83;;;;5247:8;;;;5235:21;;;;;:11;:21;;;:33;;:47;;5273:8;5235:47;:37;:47;:::i;:::-;5211:8;;;;-1:-1:-1;;;;;5199:21:16;;;;;:11;:21;;;;;:33;;:83;5315:16;;:30;;5336:8;5315:30;:20;:30;:::i;:::-;5296:16;:49;5069:593;;;5366:1;:14;;;5362:300;;;5446:8;;;;-1:-1:-1;;;;;5434:21:16;;;;;:11;:21;;;;;:35;;;:49;;5474:8;5434:49;:39;:49;:::i;:::-;5408:8;;;;-1:-1:-1;;;;;5396:21:16;;;;;;;:11;:21;;;;;;;;:35;;;;:87;;;;5547:8;;;;5535:21;;;;;:11;:21;;;:35;;:49;;5575:8;5535:49;:39;:49;:::i;:::-;5509:8;;;;-1:-1:-1;;;;;5497:21:16;;;;;:11;:21;;;;;:35;;:87;5619:18;;:32;;5642:8;5619:32;:22;:32;:::i;:::-;5598:18;:53;4816:852;;:::o;1093:194:25:-;1185:50;;;;;;-1:-1:-1;;;;;1185:50:25;;;;;;;;;;;;;;;;;;;;;;:32;;;;;;:50;;;;;-1:-1:-1;;1185:50:25;;;;;;;;-1:-1:-1;1185:32:25;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;1185:50:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1185:50:25;;;;1247:14;:12;:14::i;:::-;1239:44;;;;;;;-1:-1:-1;;;;;1239:44:25;;;;;;;;;;;;;;;;;;;;;;;;;;;3263:242:16;3398:8;;3373;;;;-1:-1:-1;;;;;3361:21:16;3398:8;3361:21;;;:11;:21;;;;;:32;:46;;;:36;:46;:::i;:::-;3338:8;;;;-1:-1:-1;;;;;3326:21:16;;;;;;;:11;:21;;;;;;;;:81;;;;3489:8;;3464;;;;3452:21;;;;;:11;:21;;;;;;:32;:46;;;:36;:46;:::i;:::-;3429:8;;;;;-1:-1:-1;;;;;3417:21:16;;;;;:11;:21;;;;;:81;3263:242::o;4556:253::-;4698:8;;4671;;;;-1:-1:-1;;;;;4659:21:16;4698:8;4659:21;;;:11;:21;;;;;:34;;;:48;;;:38;:48;:::i;:::-;4634:8;;;;-1:-1:-1;;;;;4622:21:16;;;;;;;:11;:21;;;;;;;;:34;;;;:85;;;;4793:8;;4766;;;;4754:21;;;;;:11;:21;;;;;:34;;;;:48;;;:38;:48;:::i;:::-;4729:8;;;;;-1:-1:-1;;;;;4717:21:16;;;;;:11;:21;;;;;:34;;:85;4556:253::o;12788:615::-;12866:14;12883:20;;;:9;:20;;;;;;;;:27;;;12939:18;:29;;;;;;-1:-1:-1;;;;;12883:27:16;;;13001:26;;;:18;:26;;;;;;:33;;12883:27;;12939:29;;-1:-1:-1;;13001:37:16;;;12866:14;13001:26;:37;;13071:43;;;;;;;;;;;;;;13048:66;;13179:12;13137:18;:26;13156:6;-1:-1:-1;;;;;13137:26:16;-1:-1:-1;;;;;13137:26:16;;;;;;;;;;;;13164:11;13137:39;;;;;;;;;;;;;;;;;;;;;:54;;;;-1:-1:-1;;;;;13201:26:16;;;;:18;:26;;;;;;:43;;13228:15;;13201:43;;;;;;;;;;;;;;;;;:47;;;;-1:-1:-1;;;;;13259:26:16;;;;:18;:26;;;;;;:35;;;;;-1:-1:-1;;13259:35:16;;;:::i;:::-;-1:-1:-1;13311:29:16;;;;:18;:29;;;;;;13304:36;;;13350:32;;;;;;:46;-1:-1:-1;;12788:615:16:o;13552:::-;13630:14;13647:20;;;:9;:20;;;;;;;;:27;;;13703:18;:29;;;;;;-1:-1:-1;;;;;13647:27:16;;;13765:26;;;:18;:26;;;;;;:33;;13647:27;;13703:29;;-1:-1:-1;;13765:37:16;;;13630:14;13765:26;:37;;13835:43;;;;;;;;;;;;;;13812:66;;13943:12;13901:18;:26;13920:6;-1:-1:-1;;;;;13901:26:16;-1:-1:-1;;;;;13901:26:16;;;;;;;;;;;;13928:11;13901:39;;;;;;;;;;;;;;;;;;;;;:54;;;;-1:-1:-1;;;;;13965:26:16;;;;:18;:26;;;;;;:43;;13992:15;;13965:43;;;;;;;;;;;;;;;;;:47;;;;-1:-1:-1;;;;;14023:26:16;;;;:18;:26;;;;;;:35;;;;;-1:-1:-1;;14023:35:16;;;:::i;:::-;-1:-1:-1;14075:29:16;;;;:18;:29;;;;;;14068:36;;;14114:32;;;;;;:46;-1:-1:-1;;13552:615:16:o;339:586:25:-;391:4;;512:14;571:36;;;;660:4;655:163;;;;505:385;;571:36;601:1;586:16;;571:36;;655:163;736:4;731:3;726;711:30;809:3;803:10;788:25;;505:385;-1:-1:-1;905:16:25;;;-1:-1:-1;339:586:25;:::o;292:16447:15:-;;;;;;;;;-1:-1:-1;292:16447:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;292:16447:15;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;292:16447:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"../utils/Initializable.sol\";\nimport \"./XyStakingModel.sol\";\nimport \"../IXyRequester.sol\";\n\n /**\n    @title XyStakingConsensus\n    @dev Manages the Stake for multiple clients in a decentralized consensus \n    system to trustlessly answer requests\n  */\ncontract XyStakingConsensus is Initializable, XyStakingModel {\n    using SafeMath for uint;\n    \n    /** STRUCTS */\n    struct Block {\n        bytes32 previousBlock;\n        bytes32 supportingData;\n        uint stakingBlock;\n        uint createdAt;\n        address creator;\n    }\n\n    struct Request {\n        uint xyoBounty;\n        uint weiMining;\n        uint createdAt;\n        uint responseBlockNumber;\n        address requestSender;\n        uint8 requestType;\n    }\n\n    // the array of request ids\n    bytes32[] public requestChain;\n    // the requests in the requestChain\n    mapping(bytes32 => Request) public requestsById; \n    // the array of block ids\n    bytes32[] public blockChain; \n    // The blocks in the blockChain\n    mapping(bytes32 => Block) public blocks; \n\n    /** EVENTS */\n    event RequestSubmitted(\n        bytes32 request,\n        uint xyoBounty,\n        uint weiMining,\n        address requester,\n        address xyoSender,\n        uint8 requestType\n    );\n\n    event BlockCreated(\n        bytes32 blockHash,\n        bytes32 previousBlock,\n        bytes32 supportingData,\n        uint createdAtBlock,\n        address blockProducer\n    );\n\n    event WithdrawClaimed(\n        address beneficiary,\n        uint amount,\n        uint stakerStake\n    );\n\n    event Response (\n        bytes32 request,\n        uint responseBlock,\n        uint result,\n        uint8 responseType\n    );\n\n    // mapping from stake id to bond id\n    mapping (bytes32 => bytes32) public bondedStake;\n\n    /**\n        @param _token - The ERC20 token to stake with \n        @param _blockProducerContract - The block producers \n        @param _governanceContract - The contract that governs the blockProducer and actions of the system\n    */\n    function initialize(\n        address _token,\n        address _blockProducerContract,\n        address _governanceContract\n    )\n        initializer public\n    {\n        init(_token, _blockProducerContract, _governanceContract);\n    }\n\n    /** \n        @return the latest block submitted to the blockChain \n    */\n    function getLatestBlock() \n        public \n        view \n        returns (bytes32) \n    {\n        if (blockChain.length == 0) {\n            return 0x0;\n        }\n        return blockChain[blockChain.length-1];\n    }\n\n    /**\n        @dev Withdraw reward balance can post same params via raw\n        @param xyoBounty bounty for request\n    */\n    function withdrawRewardsRequest \n    (\n        uint xyoBounty\n    ) \n        public\n        payable\n        returns (bytes32)\n    {\n        bytes32 requestId = keccak256(abi.encodePacked(msg.sender, xyoBounty, block.number));\n        submitRequest(requestId, xyoBounty, msg.sender, uint8(IXyRequester.RequestType.WITHDRAW));\n        return requestId;\n    }\n\n    /** \n        Implements IApprovalRecipient allows approveAndCall in one transaction\n    */\n    function receiveApproval(\n        address _spender, \n        uint256 _value, \n        address,\n        bytes calldata _extraData\n    ) \n        external \n    {\n        require (msg.sender == xyoToken, \"sender must be token\");\n        (uint method, bytes memory data) = abi.decode(_extraData, (uint, bytes));\n        \n        if (method == 1) {\n            (address staker, address stakee) = abi.decode(data, (address, address));\n            stakeFrom(_spender, staker, stakee, _value);\n        } else if (method == 2) {\n            ( bytes32 request, uint xyoBounty, address xyoSender, uint8 requestType) = abi.decode(data, (bytes32, uint, address, uint8));\n            submitRequestFrom(_spender, request, xyoBounty, xyoSender, requestType);\n        } else if (method == 3) {\n            (address[] memory stakers, address[] memory stakees, uint[] memory amounts) = abi.decode(data, (address[], address[], uint[]));\n            stakeMultiple(_spender, stakers, stakees, amounts);\n        } else if (method == 4) {\n            (bytes32 bondId, address staker, address[] memory stakees, uint[] memory amounts) = abi.decode(data, (bytes32, address, address[], uint[]));\n            _stakeAndBond(bondId, _spender, staker, stakees, amounts);\n        }\n    }\n\n    /**\n        @dev Escrow eth and xyo, making sure it covers the answer mining cost\n        Stores new request in request pool\n        @param request How to uniquely identify a request\n        @param xyoBounty bounty for request\n        @param xyoSender who to deduct the xyo from for mining cost\n        @param requestType based on the type we know which callback to call (string or bool)\n    */\n    function submitRequest\n    (\n        bytes32 request, \n        uint xyoBounty,\n        address xyoSender, \n        uint8 requestType\n    ) \n        public\n        payable\n    {\n        submitRequestFrom(msg.sender, request, xyoBounty, xyoSender, requestType);\n    }\n\n    function submitRequestFrom\n    (   \n        address from,\n        bytes32 request, \n        uint xyoBounty,\n        address xyoSender, \n        uint8 requestType\n    )\n        public \n        payable\n    {\n        require (requestsById[request].createdAt == 0, \"Duplicate request submitted\");\n\n        _requireFeesAndTransfer(xyoSender, xyoBounty);\n\n        Request memory q = Request (\n            xyoBounty,      // bounty\n            msg.value,      // wei for mining\n            block.number,   // created at\n            0,              // response block num           \n            from,           // requestSender (receives response cb)\n            requestType     // type of request\n        );\n\n        requestsById[request] = q;\n        requestChain.push(request);\n\n        emit RequestSubmitted(request, xyoBounty, msg.value, from, xyoSender, requestType);\n    }\n\n    /**\n        Will verify proper mining fees have been applied\n        @param xyoSender who to transfer the fees from (must have approved this contract)\n        @param xyoBounty the amount the xyoSender is paying for this request\n    */\n    function _requireFeesAndTransfer(address xyoSender, uint xyoBounty) \n        private \n    {\n        uint weiMiningMin = govContract.get(\"xyWeiMiningMin\");\n        uint bountyMin = govContract.get(\"xyXYORequestBountyMin\");\n        if (weiMiningMin > 0) {\n            require (msg.value >= weiMiningMin, \"Not enough wei to cover mining\");\n        }\n        if (xyoBounty > 0 || bountyMin > 0) {\n            require (xyoBounty >= bountyMin, \"XYO Bounty less than minimum\");\n            SafeERC20.transferFrom(xyoToken, xyoSender, address(this), xyoBounty);\n        }\n    }\n\n    /**\n        Requires the length of bytes is more than starting point + 32\n        returns 32 bytes memory (reversed to uint) at start + 32 to memory[start]\n        @param _bytes the bytes passed to pull uint from\n        @param _start index in bytes to return uint\n     */\n    function _toUintFromBytes(bytes memory _bytes, uint _start, uint bytesLen) private pure returns (uint256) {\n        require(_bytes.length >= (_start + bytesLen));\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    /** \n        @dev Calls Request interface submitResponse function for each answer.\n        Use for estimating gas of a request\n        @param _requests the requests queried\n        @param responses the response data of all the requests\n        @return The weiMining for submitting the new block\n        Will revert if the request does not exist, or the withdraw request is more htna the staker stake\n    */\n    function handleResponses\n    (\n        bytes32[] memory _requests, \n        bytes memory responses\n    )\n        internal \n        returns (uint)\n    {\n        uint byteOffset = 0;\n        uint weiMining = 0;\n        for (uint i = 0; i < _requests.length; i++) {\n            Request storage q = requestsById[_requests[i]];\n            require (q.createdAt > 0, \"Passed a request that does not exist\");\n            uint numBytes = q.requestType == uint8(IXyRequester.RequestType.BOOL_CALLBACK)\n                         || q.requestType == uint8(IXyRequester.RequestType.BOOL) ? 1 : 32;\n\n            q.responseBlockNumber = numBlocks().add(1);\n            weiMining = weiMining.add(q.weiMining);\n\n            if (q.requestType == uint8(IXyRequester.RequestType.WITHDRAW)) {\n                uint amount = _toUintFromBytes(responses, byteOffset, numBytes);\n                require (amount <= totalStakeAndUnstake(q.requestSender), \"Withdraw amount more than total staker's stake\");\n                emit WithdrawClaimed(q.requestSender, amount, totalStakeAndUnstake(q.requestSender));\n                SafeERC20.transfer(xyoToken, q.requestSender, amount);\n            } else {\n                bytes memory result = new bytes(numBytes);\n                for (uint j = 0; j < numBytes; j++) {\n                    result[j] = responses[byteOffset + j];\n                }\n                if (q.requestType == uint8(IXyRequester.RequestType.BOOL_CALLBACK) \n                    || q.requestType == uint8(IXyRequester.RequestType.UINT_CALLBACK)) {\n                    IXyRequester(q.requestSender).submitResponse(_requests[i], q.requestType, result);\n                } \n                emit Response(_requests[i], q.responseBlockNumber, _toUintFromBytes(result, 0, numBytes), q.requestType);\n            }\n            byteOffset += numBytes;\n        }\n        \n        return weiMining;\n    }\n\n    /** \n        @dev checks a message hash was signed by a list of signers via their sigs\n        @param messageHash The hash of the message that was signed\n        @param signers The in-order list of signers of the message\n        @param sigR R values in signatures\n        @param sigS S values in signatures\n        @param sigV V values in signatures\n    */\n    function checkSigsAndStakes\n    (\n        bytes32 messageHash,\n        address[] memory signers,\n        bytes32[] memory sigR,\n        bytes32[] memory sigS,\n        uint8[] memory sigV\n    )\n        view\n        internal \n    {\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash));\n        address lastStakee = address(0);\n        uint stake = 0;\n        for (uint i = 0; i < signers.length; i++) {\n            address signer = ecrecover(prefixedHash, sigV[i], sigR[i], sigS[i]);\n            require(signers[i] > lastStakee , \"Signers array must be ascending\");\n            lastStakee = signers[i];\n            require(signers[i] == signer, \"Signature mis-match\");\n            stake = stake.add(stakeeStake[lastStakee].activeStake);\n        }\n        // check sufficient stake by stakees subitted\n        require (stake > totalActiveStake.mul(govContract.get(\"xyStakeSuccessPct\")).div(100), \"Not enough stake\");\n    }\n\n    function _createBlock(bytes32 previousBlock, bytes32 newBlock, bytes32 supportingData, uint stakingBlock) private {\n        Block memory b = Block(previousBlock, supportingData, stakingBlock, block.number,  msg.sender);\n        blockChain.push(newBlock);\n        blocks[newBlock] = b;\n        emit BlockCreated(newBlock, previousBlock, supportingData, block.number, msg.sender);\n    }\n\n    /**\n        Submit a new block to the consensus blockChain. Verifies stake in consensus is over 51% of the network. \n        calls requests' callbacks with responses.  Creates new block and returns weiMining for successful creation.\n        @param previousBlock the prior block to maintain the \n        @param stakingBlock the block number diviners get staking data for\n        @param _requests list of the request ids (minus first 2 bytes)\n        @param supportingData the hash of the supporting block data\n        @param responses byte array of responses\n        @param signers Stakees, aka diviners and must be passed in ascending order to check for dups\n        @param sigR R values in signatures\n        @param sigS S values in signatures\n        @param sigV V values in signatures\n        @return The hash of the new block\n    */\n    function submitBlock\n    (\n        bytes32 previousBlock,\n        uint stakingBlock,\n        bytes32[] memory _requests,\n        bytes32 supportingData,\n        bytes memory responses,\n        address[] memory signers,\n        bytes32[] memory sigR,\n        bytes32[] memory sigS,\n        uint8[] memory sigV\n    ) \n        public \n        returns (bytes32)\n    {\n        require (blockProducerContract.exists(msg.sender), \"Only approved BP can submit\");\n        require (previousBlock == getLatestBlock(), \"Incorrect previous block\");\n        require (_requests.length > 0, \"No requests in block\");\n        \n        bytes32 newBlock = keccak256(abi.encodePacked(previousBlock, stakingBlock, _requests, supportingData, responses));\n        uint weiMining = handleResponses(_requests, responses);\n        msg.sender.transfer(weiMining);\n\n        checkSigsAndStakes(newBlock, signers, sigR, sigS, sigV);\n        _createBlock(previousBlock, newBlock, supportingData, stakingBlock);\n\n        return newBlock;\n    }\n\n    /**\n        Returns a block for a given request id or a undefined block\n        @param requestId the block this request was responded on\n    */\n    function blockForRequest(bytes32 requestId) \n        public view \n        returns (\n            bytes32 previousBlock,\n            bytes32 supportingData,\n            uint stakingBlock,\n            uint createdAt,\n            address creator\n        ) \n    {\n        Request memory r = requestsById[requestId];\n        if (r.responseBlockNumber > 0) {\n            bytes32 blockId = blockChain[r.responseBlockNumber.sub(1)];\n            if (blockId != 0) {\n                previousBlock = blocks[blockId].previousBlock;\n                supportingData = blocks[blockId].supportingData;\n                stakingBlock = blocks[blockId].stakingBlock;\n                createdAt = blocks[blockId].createdAt;\n                creator = blocks[blockId].creator;\n            }\n        }\n    }\n\n    /**\n        Returns supporting data for a given request id\n        @param requestId the block this request was responded on\n        @return content addressable hash of the data\n    */\n    function supportingDataForRequest(bytes32 requestId) public view returns (bytes32 supportingData) {\n        (,supportingData,,,) = blockForRequest(requestId);\n    }\n\n    function numRequests() public view returns (uint) {\n        return requestChain.length;\n    }\n    \n    function numBlocks() public view returns (uint) {\n        return blockChain.length;\n    }\n\n    /* Network Staking Support */\n\n    /**\n        Called from StakingModel base class to see if this is bonded stake\n    */\n    function isBondedStake(bytes32 stakingId) internal view returns (bool) {\n        return bondedStake[stakingId] != 0;\n    }\n\n    /**\n        stakes a bonded stake\n        @param bondId - the bond id to ensure the correct stake\n        @param issuer - Who provides the xyo\n        @param staker - the beneficiary of the stake\n        @param stakees - the stakees to stake\n        @param amounts - the amounts to stake by stakee\n    */\n    function _stakeAndBond (\n        bytes32 bondId, \n        address issuer, \n        address staker, \n        address[] memory stakees, \n        uint[] memory amounts\n    ) \n        private \n    {\n        require(stakees.length == amounts.length, \"bad inputs\");\n        for (uint i = 0; i < stakees.length; i++) {\n            bytes32 stakingId = stakeFrom(issuer, staker, stakees[i], amounts[i]);\n            bondedStake[stakingId] = bondId;\n            _activateStake(stakingId, blockProducerContract.exists(stakees[i]) != true);\n        }\n    } \n\n    /**\n        Unstakes/withdraws to bonded stake\n        @param bondId - the bond id to ensure the correct stake\n        @param stakingId - the id of the stake to withdraw to bond contract\n    */\n    function unstakeBonded (\n        bytes32 bondId, \n        bytes32 stakingId\n    ) \n        external \n    {\n        address bondContract = address(govContract.get('XyBondContract'));\n        require(msg.sender == bondContract, \"only from bond contract\");\n        require(bondId != 0 && bondId == bondedStake[stakingId], \"Stake not bonded to this bond\");\n        Stake storage data = stakeData[stakingId];\n        if (data.unstakeBlock==0) {\n            updateCacheOnUnstake(data);\n            emit StakeEvent(stakingId, data.amount, data.staker, data.stakee, StakeTransition.UNSTAKED);\n        }\n        _withdrawStakeData(stakingId, data);\n        bondedStake[stakingId] = 0;\n    }\n}",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "1": {
      "links": {},
      "events": {},
      "address": "0x0242514106114DEaA99Fd81574142c36Edb03B6D",
      "transactionHash": "0xe139dda3fda0431e31808648140c4a5b0a7e7bfa9ec6f0ddcff3589b6ff79106",
      "updated_at": 1555605742345
    },
    "42": {
      "links": {},
      "events": {},
      "address": "0x1a2C4a6Ffd72848E7bD63d2177c29a0aC80c6386",
      "transactionHash": "0x30876367b283daea40cf2893c7871ad7c00aad49d1deadfa2556251c2ca866eb",
      "updated_at": 1555545130803
    }
  },
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-04-30T21:56:57.471Z",
  "devdoc": {
    "details": "Manages the Stake for multiple clients in a decentralized consensus  system to trustlessly answer requests",
    "methods": {
      "blockForRequest(bytes32)": {
        "params": {
          "requestId": "the block this request was responded on"
        }
      },
      "cooldownStake(bytes32)": {
        "details": "Mark stake as cooled down or activated cooled down stake is for non-block producers only",
        "params": {
          "stakingId": "- the tokenId of the staking token"
        }
      },
      "getLatestBlock()": {
        "return": "the latest block submitted to the blockChain "
      },
      "initialize(address,address,address)": {
        "params": {
          "_blockProducerContract": "- The block producers ",
          "_governanceContract": "- The contract that governs the blockProducer and actions of the system",
          "_token": "- The ERC20 token to stake with "
        }
      },
      "resolveGovernanceAction(address,uint256,uint256)": {
        "params": {
          "batchSize": "if batchable action, batchSize",
          "stakee": "the staked item receiving action",
          "startIndex": "if a batchable action, where to start"
        }
      },
      "stake(address,uint256)": {
        "details": "This contract must be approved to transfers by holder",
        "params": {
          "amount": "- the amount to stake",
          "stakee": "- the stakable address "
        }
      },
      "submitBlock(bytes32,uint256,bytes32[],bytes32,bytes,address[],bytes32[],bytes32[],uint8[])": {
        "params": {
          "_requests": "list of the request ids (minus first 2 bytes)",
          "previousBlock": "the prior block to maintain the ",
          "responses": "byte array of responses",
          "sigR": "R values in signatures",
          "sigS": "S values in signatures",
          "sigV": "V values in signatures",
          "signers": "Stakees, aka diviners and must be passed in ascending order to check for dups",
          "stakingBlock": "the block number diviners get staking data for",
          "supportingData": "the hash of the supporting block data"
        },
        "return": "The hash of the new block"
      },
      "submitRequest(bytes32,uint256,address,uint8)": {
        "details": "Escrow eth and xyo, making sure it covers the answer mining cost Stores new request in request pool",
        "params": {
          "request": "How to uniquely identify a request",
          "requestType": "based on the type we know which callback to call (string or bool)",
          "xyoBounty": "bounty for request",
          "xyoSender": "who to deduct the xyo from for mining cost"
        }
      },
      "supportingDataForRequest(bytes32)": {
        "params": {
          "requestId": "the block this request was responded on"
        },
        "return": "content addressable hash of the data"
      },
      "unstake(bytes32)": {
        "params": {
          "stakingId": "- the tokenId of the staking token"
        }
      },
      "unstakeBonded(bytes32,bytes32)": {
        "params": {
          "bondId": "- the bond id to ensure the correct stake",
          "stakingId": "- the id of the stake to withdraw to bond contract"
        }
      },
      "withdrawManyStake(bytes32[])": {
        "params": {
          "stakingIds": "- Ids to withdraw"
        }
      },
      "withdrawRewardsRequest(uint256)": {
        "details": "Withdraw reward balance can post same params via raw",
        "params": {
          "xyoBounty": "bounty for request"
        }
      },
      "withdrawStake(bytes32)": {
        "params": {
          "stakingId": "- the id of the stake to remove"
        }
      }
    },
    "title": "XyStakingConsensus"
  },
  "userdoc": {
    "methods": {
      "blockForRequest(bytes32)": {
        "notice": "Returns a block for a given request id or a undefined block"
      },
      "getAvailableStakeeUnstake(address)": {
        "notice": "Get the available unstake, counting only stakes that can be withdrawn "
      },
      "getAvailableStakerUnstake(address)": {
        "notice": "Get the available unstake, counting only stakes that can be withdrawn "
      },
      "numStakerStakes(address)": {
        "notice": "Public getters "
      },
      "receiveApproval(address,uint256,address,bytes)": {
        "notice": "Implements IApprovalRecipient allows approveAndCall in one transaction"
      },
      "resolveGovernanceAction(address,uint256,uint256)": {
        "notice": "Call this when it's time to resolve a passed governance action"
      },
      "stake(address,uint256)": {
        "notice": "Create new stake on a stakee"
      },
      "submitBlock(bytes32,uint256,bytes32[],bytes32,bytes,address[],bytes32[],bytes32[],uint8[])": {
        "notice": "Submit a new block to the consensus blockChain. Verifies stake in consensus is over 51% of the network.  calls requests' callbacks with responses.  Creates new block and returns weiMining for successful creation."
      },
      "supportingDataForRequest(bytes32)": {
        "notice": "Returns supporting data for a given request id"
      },
      "unstake(bytes32)": {
        "notice": "unstake a specific previous stake "
      },
      "unstakeBonded(bytes32,bytes32)": {
        "notice": "Unstakes/withdraws to bonded stake"
      },
      "withdrawManyStake(bytes32[])": {
        "notice": "Withdraw a batch of passed stake"
      },
      "withdrawStake(bytes32)": {
        "notice": "Withdraw a single stake by stakingId, removes stake"
      }
    }
  }
}