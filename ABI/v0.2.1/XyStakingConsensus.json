{
  "contractName": "XyStakingConsensus",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakeeToStakingIds",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xyoToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "bondedStake",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalActiveStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "govContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerStake",
      "outputs": [
        {
          "name": "totalStake",
          "type": "uint256"
        },
        {
          "name": "activeStake",
          "type": "uint256"
        },
        {
          "name": "cooldownStake",
          "type": "uint256"
        },
        {
          "name": "totalUnstake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "actionType",
          "type": "uint8"
        }
      ],
      "name": "isUnstakeAction",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalVotingStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "cooldownStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "activateStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakingStakerIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakeData",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "stakeBlock",
          "type": "uint256"
        },
        {
          "name": "unstakeBlock",
          "type": "uint256"
        },
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "staker",
          "type": "address"
        },
        {
          "name": "isActivated",
          "type": "bool"
        },
        {
          "name": "isCooledDown",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingIds",
          "type": "bytes32[]"
        }
      ],
      "name": "withdrawManyStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "stakingIds",
          "type": "bytes32[]"
        }
      ],
      "name": "totalCooldownStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "totalStakeAndUnstake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "resolveGovernanceAction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "stakerToStakingIds",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blockProducerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "requestChain",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blockChain",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "stakingStakeeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "withdrawStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "penaltyStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "stakee",
          "type": "address"
        }
      ],
      "name": "numStakeeStakes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "bondStakeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requestsById",
      "outputs": [
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "weiMining",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "responseBlockNumber",
          "type": "uint256"
        },
        {
          "name": "requestSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "numStakerStakes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bondStakes",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "blocks",
      "outputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeeStake",
      "outputs": [
        {
          "name": "totalStake",
          "type": "uint256"
        },
        {
          "name": "activeStake",
          "type": "uint256"
        },
        {
          "name": "cooldownStake",
          "type": "uint256"
        },
        {
          "name": "totalUnstake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "request",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "weiMining",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "xyoSender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "RequestSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "createdAtBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "blockProducer",
          "type": "address"
        }
      ],
      "name": "BlockCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "stakerStake",
          "type": "uint256"
        }
      ],
      "name": "WithdrawClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "request",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "responseBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "responseType",
          "type": "uint8"
        }
      ],
      "name": "Response",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "stakingId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "stakee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "transition",
          "type": "uint8"
        }
      ],
      "name": "StakeEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_blockProducerContract",
          "type": "address"
        },
        {
          "name": "_governanceContract",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestBlock",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "xyoBounty",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardsRequest",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "request",
          "type": "bytes32"
        },
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "xyoSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "submitRequest",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "request",
          "type": "bytes32"
        },
        {
          "name": "xyoBounty",
          "type": "uint256"
        },
        {
          "name": "xyoSender",
          "type": "address"
        },
        {
          "name": "requestType",
          "type": "uint8"
        }
      ],
      "name": "submitRequestFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "_requests",
          "type": "bytes32[]"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "responses",
          "type": "bytes"
        },
        {
          "name": "signers",
          "type": "address[]"
        },
        {
          "name": "sigR",
          "type": "bytes32[]"
        },
        {
          "name": "sigS",
          "type": "bytes32[]"
        },
        {
          "name": "sigV",
          "type": "uint8[]"
        }
      ],
      "name": "submitBlock",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "blockForRequest",
      "outputs": [
        {
          "name": "previousBlock",
          "type": "bytes32"
        },
        {
          "name": "supportingData",
          "type": "bytes32"
        },
        {
          "name": "stakingBlock",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "supportingDataForRequest",
      "outputs": [
        {
          "name": "supportingData",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numRequests",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numBlocks",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bondId",
          "type": "bytes32"
        },
        {
          "name": "stakingId",
          "type": "bytes32"
        }
      ],
      "name": "unstakeBonded",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "bondId",
          "type": "bytes32"
        }
      ],
      "name": "numBondStakes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "292:17369:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:17369:15;;;;;;;",
  "deployedSourceMap": "292:17369:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12439:1010;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12439:1010:15;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12439:1010:15;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;;;;;;;;-1:-1:-1;12439:1010:15;;;;-1:-1:-1;12439:1010:15;;;;-1:-1:-1;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;;;;;;;-1:-1:-1;12439:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;;;;;;;-1:-1:-1;12439:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;;;;;;;-1:-1:-1;12439:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;;;;;;;-1:-1:-1;12439:1010:15;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;12439:1010:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12439:1010:15;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12439:1010:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12439:1010:15;;-1:-1:-1;12439:1010:15;;-1:-1:-1;;;;;12439:1010:15:i;:::-;;;;;;;;;;;;;;;;1015:56:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:56:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1015:56:16;;;;;;;;:::i;308:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:23:16;;;:::i;:::-;;;;-1:-1:-1;;;;;308:23:16;;;;;;;;;;;;;;1745:47:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1745:47:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1745:47:15;;:::i;631:28:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;631:28:16;;;:::i;519:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:31:16;;;:::i;1426:52::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:52:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1426:52:16;-1:-1:-1;;;;;1426:52:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7907:235;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7907:235:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7907:235:16;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16067:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16067:121:16;;;:::i;10917:110::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10917:110:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10917:110:16;;:::i;:::-;;11033:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11033:112:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11033:112:16;;:::i;1260:51::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1260:51:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1260:51:16;;:::i;920:43::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;920:43:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;920:43:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;920:43:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:215:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2553:215:15;;;:::i;15398:210:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15398:210:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15398:210:16;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;15398:210:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15398:210:16;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;15398:210:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15398:210:16;;-1:-1:-1;15398:210:16;;-1:-1:-1;;;;;15398:210:16:i;732:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:30:16;;;:::i;13603:780:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13603:780:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13603:780:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13603:780:15;;;;;;;;;;;;;;12017:616:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12017:616:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12017:616:16;;:::i;15900:162::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15900:162:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15900:162:16;-1:-1:-1;;;;;15900:162:16;;:::i;5936:1056::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5936:1056:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5936:1056:16;;;;;;;;;;;;;:::i;1077:56::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1077:56:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1077:56:16;;;;;;;;:::i;3356:1254:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3356:1254:15;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;3356:1254:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3356:1254:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3356:1254:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3356:1254:15;;-1:-1:-1;3356:1254:15;-1:-1:-1;3356:1254:15;:::i;397:44:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;397:44:16;;;:::i;14850:89:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14850:89:15;;;:::i;14747:93::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14747:93:15;;;:::i;2899:356::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2899:356:15;;:::i;10022:182:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10022:182:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10022:182:16;;;;;;;;:::i;801:29:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:29:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;801:29:15;;:::i;960:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:27:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;960:27:15;;:::i;1203:51:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:51:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1203:51:16;;:::i;17545:114:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17545:114:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17545:114:15;;:::i;14707:584:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14707:584:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14707:584:16;;:::i;5286:870:15:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;5286:870:15;;-1:-1:-1;;;;;5286:870:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2237:232::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2237:232:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2237:232:15;;;;;;;;;;;;;;;;;;;:::i;830:24:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:24:16;;;:::i;15770:125::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15770:125:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15770:125:16;-1:-1:-1;;;;;15770:125:16;;:::i;1945:47:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1945:47:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1945:47:15;;:::i;876:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:47:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;876:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;876:47:15;;;;;;;;;;;;;;;;;;;;16847:692;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16847:692:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16847:692:15;;;;;;;:::i;5015:265::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;5015:265:15;;;;;;;;;;;;-1:-1:-1;;;;;5015:265:15;;;;;;;;:::i;15640:125:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15640:125:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15640:125:16;-1:-1:-1;;;;;15640:125:16;;:::i;1839:48:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1839:48:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1839:48:15;;;;;;;:::i;1030:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:39:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1030:39:15;;:::i;14577:164::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14577:164:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14577:164:15;;:::i;1368:52:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1368:52:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1368:52:16;-1:-1:-1;;;;;1368:52:16;;:::i;12439:1010:15:-;12820:21;;:40;;;;;;12849:10;12820:40;;;;;;12788:7;;-1:-1:-1;;;;;12820:21:15;;:28;;:40;;;;;;;;;;;;;;:21;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;12820:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12820:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12820:40:15;12811:81;;;;;;;-1:-1:-1;;;;;12811:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;12928:16;:14;:16::i;:::-;12911:33;;12902:71;;;;;-1:-1:-1;;;;;12902:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;12992:16;;13011:1;-1:-1:-1;12983:54:15;;;;;-1:-1:-1;;;;;12983:54:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;13056:16;13102:13;13117:12;13131:9;13142:14;13158:9;13085:83;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13085:83:15;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;13085:83:15;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13085:83:15;;;13075:94;;;;;;13056:113;;13179:14;13196:37;13212:9;13223;13196:15;:37::i;:::-;13243:30;;13179:54;;-1:-1:-1;13243:10:15;;:30;;;;;13179:54;;13243:30;;;;13179:54;13243:10;:30;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13243:30:15;13284:55;13303:8;13313:7;13322:4;13328;13334;13284:18;:55::i;:::-;13349:67;13362:13;13377:8;13387:14;13403:12;13349;:67::i;:::-;-1:-1:-1;13434:8:15;12439:1010;-1:-1:-1;;;;;;;;;;12439:1010:15:o;1015:56:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;308:23::-;;;-1:-1:-1;;;;;308:23:16;;:::o;1745:47:15:-;;;;;;;;;;;;;:::o;631:28:16:-;;;;:::o;519:31::-;;;-1:-1:-1;;;;;519:31:16;;:::o;1426:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7907:235::-;8008:4;;8037:10;:45;;;;;;;;;:97;;;-1:-1:-1;8101:33:16;8087:10;:47;;;;;;;;;8037:97;8029:106;7907:235;-1:-1:-1;;7907:235:16:o;16067:121::-;16118:4;16141:40;16164:16;;16141:18;;:22;;:40;;;;:::i;:::-;16134:47;;16067:121;;:::o;10917:110::-;10989:31;11004:9;11015:4;10989:14;:31::i;:::-;10917:110;:::o;11033:112::-;11106:32;11121:9;11132:5;11106:14;:32::i;1260:51::-;;;;;;;;;;;;;:::o;920:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;920:43:16;;;;;;;;;-1:-1:-1;;;920:43:16;;;;;;;;;;:::o;2553:215:15:-;2655:10;:17;2627:7;;2655:22;2651:63;;;-1:-1:-1;2700:3:15;2693:10;;2651:63;2730:10;2741:17;;-1:-1:-1;;2741:19:15;;;2730:31;;;;;;;;;;;;;;2723:38;;2553:215;:::o;15398:210:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15507:6;15502:100;15523:10;:17;15519:1;:21;15502:100;;;15561:28;15575:10;15586:1;15575:13;;;;;;;;;;;;;;;;;;15561;:28::i;:::-;15542:3;;15502:100;;;;15398:210;:::o;732:30::-;;;;:::o;13603:780:15:-;13699:21;13734:22;13770:17;13801:14;13829:15;13870:16;;:::i;:::-;-1:-1:-1;13889:23:15;;;;:12;:23;;;;;;;;13870:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13870:42:15;;;;;;-1:-1:-1;;;13870:42:15;;;;;;;;;;-1:-1:-1;13922:455:15;;;13967:15;13985:10;13996:28;14022:1;13996;:21;;;:25;;:28;;;;:::i;:::-;13985:40;;;;;;;;;;;;;;;;;;;-1:-1:-1;14043:12:15;;14039:328;;14091:15;;;;:6;:15;;;;;:29;;14155:30;;;;14218:28;;;;14276:25;;;;14329:23;;;;;14091:29;;-1:-1:-1;14155:30:15;;-1:-1:-1;14218:28:15;-1:-1:-1;14276:25:15;;-1:-1:-1;;;;;;14329:23:15;;-1:-1:-1;14039:328:15;13922:455;;13603:780;;;;;;;;:::o;12017:616:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12101:18;12122:20;;;:9;:20;;;;;12161:24;12132:9;12161:13;:24::i;:::-;12160:25;12152:74;;;;-1:-1:-1;;;;;12152:74:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12244:11;;;;-1:-1:-1;;;;;12244:11:16;12259:10;12244:25;12236:73;;;;-1:-1:-1;;;;;12236:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12347:11;;:34;;;-1:-1:-1;;;;;;;;;;;12347:34:16;;;;;;;;;;;;;;;;;;;;;12385:12;;12327:55;;-1:-1:-1;;;;;12347:11:16;;;;:15;;:34;;;;;;;;;;;:11;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;12347:34:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:34:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12347:34:16;12327:15;;;;;:55;:19;:55;:::i;:::-;:70;12319:108;;;;;-1:-1:-1;;;;;12319:108:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12445:17;;;;:22;12437:52;;;;;-1:-1:-1;;;;;12437:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;12499:26;12520:4;12499:20;:26::i;:::-;12562:11;;12575;;;;12588;;;;;12540:86;;;;;;;;;;;;;-1:-1:-1;;;;;12575:11:16;;;12540:86;;;;12588:11;;12540:86;;;;;;;;;;;;;;;;;;2631:1;12017:616;:::o;15900:162::-;-1:-1:-1;;;;;16025:19:16;15967:4;16025:19;;;:11;:19;;;;;:30;;15990:32;;;;;:65;;15900:162::o;5936:1056::-;6149:11;;:27;;;;;;-1:-1:-1;;;;;6149:27:16;;;;;;;;;6084:12;;;;;;6149:11;;;:19;;:27;;;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;6149:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6149:27:16;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6149:27:16;;;;;;;;;;;;;;;-1:-1:-1;6149:27:16;;-1:-1:-1;6149:27:16;-1:-1:-1;6206:4:16;6194:16;;;;6186:52;;;;;-1:-1:-1;;;;;6186:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:31;6278:10;:45;;;;;;;;;6274:570;;;6339:64;6364:6;6372:10;6384:9;6395:7;6339:24;:64::i;:::-;6274:570;;;6438:33;6424:10;:47;;;;;;;;;6420:424;;;6530:58;6555:6;6563:10;6575:9;6586:1;6530:24;:58::i;:::-;6633:21;;:36;;;;;;-1:-1:-1;;;;;6633:36:16;;;;;;;;;:21;;;;;:28;;:36;;;;;:21;;:36;;;;;;;:21;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6633:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6633:36:16;;;;6420:424;;;6704:30;6690:10;:44;;;;;;;;;6686:158;;;6750:21;;:36;;;;;;-1:-1:-1;;;;;6750:36:16;;;;;;;;;:21;;;;;:28;;:36;;;;;:21;;:36;;;;;;;:21;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6750:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6800:11:16;;:33;;;;;;-1:-1:-1;;;;;6800:33:16;;;;;;;;;:11;;;;;-1:-1:-1;6800:25:16;;-1:-1:-1;6800:33:16;;;;;:11;;:33;;;;;;;:11;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6800:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6800:33:16;;;;6686:158;6859:27;6875:10;6859:15;:27::i;:::-;:67;;;;-1:-1:-1;;;;;;6890:19:16;;;;;;:11;:19;;;;;:31;;;:36;6859:67;6855:131;;;6942:11;;:33;;;;;;-1:-1:-1;;;;;6942:33:16;;;;;;;;;:11;;;;;:25;;:33;;;;;:11;;:33;;;;;;;:11;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6942:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6942:33:16;;;;6855:131;5936:1056;;;;;;:::o;1077:56::-;;;;;;;;;;;;;;;;;;;;3356:1254:15;3547:8;;-1:-1:-1;;;;;3547:8:15;3533:10;:22;3524:56;;;;;-1:-1:-1;;;;;3524:56:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;3591:11;3604:17;3636:10;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3625:37:15;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3625:37:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3625:37:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3625:37:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3590:72:15;;-1:-1:-1;3625:37:15;;-1:-1:-1;;;3695:1:15;3685:11;;3681:923;;-1:-1:-1;3681:923:15;;-1:-1:-1;;;3681:923:15;3713:14;3729;3758:4;3747:36;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3747:36:15;;;;;;;;;-1:-1:-1;3747:36:15;-1:-1:-1;3797:43:15;3807:8;3747:36;;3833:6;3797:9;:43::i;:::-;;3681:923;;;;;3861:6;3871:1;3861:11;3857:747;;;3890:15;3907:14;3923:17;3942;3974:4;3963:49;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;3963:49:15;;;;;;;;;;;;;;;;;-1:-1:-1;3963:49:15;-1:-1:-1;3963:49:15;;-1:-1:-1;3963:49:15;-1:-1:-1;4026:71:15;4044:8;3963:49;;;;4026:17;:71::i;:::-;3857:747;;;;;;;4118:6;4128:1;4118:11;4114:490;;;4146:24;4172;4198:21;4234:4;4223:48;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4223:48:15;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4223:48:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4223:48:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4223:48:15;;;;;;4145:126;;;;;;4285:50;4299:8;4309:7;4318;4327;4285:13;:50::i;4114:490::-;4356:6;4366:1;4356:11;4352:252;;;4384:14;4400;4416:24;4442:21;4478:4;4467:55;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4467:55:15;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4467:55:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;4467:55:15;;;;;;4383:139;;;;;;;;4536:57;4550:6;4558:8;4568:6;4576:7;4585;4536:13;:57::i;:::-;4352:252;;;;;3356:1254;;;;;;;:::o;397:44:16:-;;;-1:-1:-1;;;;;397:44:16;;:::o;14850:89:15:-;14915:10;:17;14850:89;:::o;14747:93::-;14814:12;:19;14747:93;:::o;2899:356::-;3069:53;;;3086:10;3069:53;;;;;;;;;;;;;;;;;3109:12;3069:53;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3069:53:15;;;;;;;3059:64;;;;;;;-1:-1:-1;;3133:89:15;;3059:64;;3069:53;;3187:33;3133:13;:89::i;10022:182:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;10118:7;;-1:-1:-1;;;;;2567:11:16;;:15;;:27;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10148:49;10158:10;10170;10182:6;10190;10148:9;:49::i;:::-;10141:56;10022:182;-1:-1:-1;;;10022:182:16:o;801:29:15:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;801:29:15;:::o;960:27::-;;;;;;;;;;;1203:51:16;;;;;;;;;;;;;:::o;17545:114:15:-;17604:4;17627:18;;;:10;:18;;;;;:25;;17545:114::o;14707:584:16:-;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;14794:18;14815:20;;;:9;:20;;;;;14854:24;14825:9;14854:13;:24::i;:::-;14853:25;14845:66;;;;;-1:-1:-1;;;;;14845:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;14929:11;;14961;;;;14929:44;;;;;;-1:-1:-1;;;;;14961:11:16;;;14929:44;;;;;;:11;;;;;:31;;:44;;;;;;;;;;;;;;:11;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;14929:44:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14929:44:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14929:44:16;:53;14921:104;;;;-1:-1:-1;;;;;14921:104:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15063:1;15043:4;:17;;;:21;:98;;;;-1:-1:-1;15089:11:16;;:36;;;-1:-1:-1;;;;;;;;;;;15089:36:16;;;;;;;;;;;;;;;;;;;;;15129:12;;-1:-1:-1;;;;;15089:11:16;;:15;;:36;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;15089:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15089:36:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15089:36:16;15069:17;;;;:56;15068:73;15043:98;15035:133;;;;;;;-1:-1:-1;;;;;15035:133:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15186:11;;;;-1:-1:-1;;;;;15186:11:16;15201:10;15186:25;15178:61;;;;;-1:-1:-1;;;;;15178:61:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15249:35;15268:9;15279:4;15249:18;:35::i;5286:870:15:-;5509:21;;;;:12;:21;;;;;:31;;;:36;5500:77;;;;;-1:-1:-1;;;;;5500:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5588:45;5612:9;5623;5588:23;:45::i;:::-;5644:16;;:::i;:::-;5663:321;;;;;;;;;5685:9;5663:321;;;;5723:9;5663:321;;;;5769:12;5663:321;;;;5811:1;5663:321;;;;5872:4;-1:-1:-1;;;;;5663:321:15;;;;;5940:11;5663:321;;;;;5644:340;;6019:1;5995:12;:21;6008:7;5995:21;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5995:25:15;;;;;-1:-1:-1;;;;;5995:25:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6030:12;6048:7;6030:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6030:26:15;;;;;;;;;;;;;;;;;;;;;;6072:77;6089:7;6098:9;6109;6120:4;6126:9;6137:11;6072:77;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6072:77:15;-1:-1:-1;;;;;6072:77:15;;;;;;-1:-1:-1;;;;;6072:77:15;-1:-1:-1;;;;;6072:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5286:870;;;;;;:::o;2237:232::-;1024:12:29;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:29;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;-1:-1:-1;;1170:19:29;;;;-1:-1:-1;;1195:18:29;;;;;;;;1152:12;;;2405:57:15;2410:6;2418:22;2442:19;2405:4;:57::i;:::-;1228:12:29;:30;;;;;;;-1:-1:-1;;1228:30:29;;;;;;;;;-1:-1:-1;;;2237:232:15:o;830:24:16:-;;;;:::o;15770:125::-;-1:-1:-1;;;;;15855:26:16;15832:4;15855:26;;;:18;:26;;;;;:33;;15770:125::o;1945:47:15:-;;;;;;;;;;;;;:::o;876:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;876:47:15;;;-1:-1:-1;;;876:47:15;;;;;:::o;16847:692::-;16993:11;;:33;;;-1:-1:-1;;;;;;;;;;;16993:33:15;;;;;;;;;;;;;;;;;;;;;16962:20;;-1:-1:-1;;;;;16993:11:15;;:15;;:33;;;;;;;;;;;:11;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;16993:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16993:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16993:33:15;;-1:-1:-1;17045:10:15;-1:-1:-1;;;;;17045:26:15;;;17037:62;;;;;-1:-1:-1;;;;;17037:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;17117:11;;;;;:47;;-1:-1:-1;17142:22:15;;;;:11;:22;;;;;;17132:32;;17117:47;17109:89;;;;;;;-1:-1:-1;;;;;17109:89:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;17208:18;17229:20;;;:9;:20;;;;;17263:17;;;;:20;17259:182;;;17299:26;17320:4;17299:20;:26::i;:::-;17366:11;;17379;;;;17392;;;;;17344:86;;;;;;;;;;;;;-1:-1:-1;;;;;17379:11:15;;;17344:86;;;;17392:11;;17344:86;;;;;;;;;;;;;;;;;;17259:182;17450:37;17469:6;17477:9;17450:18;:37::i;:::-;17497:35;17516:9;17527:4;17497:18;:35::i;:::-;16847:692;;;;:::o;5015:265::-;5200:73;5218:10;5230:7;5239:9;5250;5261:11;5200:17;:73::i;15640:125:16:-;-1:-1:-1;;;;;15725:26:16;15702:4;15725:26;;;:18;:26;;;;;:33;;15640:125::o;1839:48:15:-;;;;;;;;;;;;;;;;;;;;1030:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:39:15;;:::o;14577:164::-;14651:22;14708:26;14724:9;14708:15;:26::i;:::-;-1:-1:-1;14685:49:15;;14577:164;-1:-1:-1;;;;;14577:164:15:o;1368:52:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7982:1879:15:-;8122:4;;;;8199:1621;8220:9;:16;8216:1;:20;8199:1621;;;8257:17;8277:12;:26;8290:9;8300:1;8290:12;;;;;;;;;;;;;;;;;;8277:26;;;;;;;;;;;8257:46;;8340:1;8326;:11;;;:15;8317:65;;;;;;-1:-1:-1;;;;;8317:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8412:13;;;;8396;;8412:62;-1:-1:-1;;;8412:13:15;;;;8435:38;8412:62;;:144;;-1:-1:-1;8526:29:15;8503:13;;;;-1:-1:-1;;;8503:13:15;;:53;:13;:53;8412:144;:153;;8563:2;8412:153;;;8559:1;8412:153;8396:169;;;;8604:18;8620:1;8604:11;:9;:11::i;:::-;:15;:18;:15;:18;:::i;:::-;8580:21;;;:42;8662:11;;;;8648:26;;:9;;:26;:13;:26;:::i;:::-;8693:13;;;;8636:38;;-1:-1:-1;8693:57:15;-1:-1:-1;;;8693:13:15;;;;8716:33;8693:57;8689:1085;;;8770:11;8784:49;8801:9;8812:10;8824:8;8784:16;:49::i;:::-;8891:15;;;;8770:63;;-1:-1:-1;8870:37:15;;-1:-1:-1;;;;;8891:15:15;8870:20;:37::i;:::-;8860:47;;;8851:107;;;;-1:-1:-1;;;;;8851:107:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8997:15;;;;8981:79;;-1:-1:-1;;;;;8997:15:15;9014:6;9022:37;8997:15;9022:20;:37::i;:::-;8981:79;;;-1:-1:-1;;;;;8981:79:15;;;;;;;;;;;;;;;;;;;;;;;;;9097:8;;9107:15;;;;9078:53;;-1:-1:-1;;;;;9097:8:15;;;;9107:15;9124:6;9078:18;:53::i;:::-;8689:1085;;;;9170:19;9202:8;9192:19;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;9192:19:15;87:34:-1;135:17;;-1:-1;9192:19:15;-1:-1:-1;9170:41:15;-1:-1:-1;9234:6:15;9229:114;9250:8;9246:1;:12;9229:114;;;9299:9;9322:1;9309:10;:14;9299:25;;;;;;;;;;;;;;;;;;;;9287:6;9294:1;9287:9;;;;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;9260:3:15;;9229:114;;;-1:-1:-1;9364:13:15;;;;:62;-1:-1:-1;;;9364:13:15;;;;9387:38;9364:62;;:149;;-1:-1:-1;9451:13:15;;;;:62;-1:-1:-1;;;9451:13:15;;;;9474:38;9451:62;9364:149;9360:277;;;9550:15;;;;9582:12;;-1:-1:-1;;;;;9550:15:15;;;;9537:44;;9582:9;;9592:1;;9582:12;;;;;;;;;;;;;;9596:1;:13;;;;;;;;;;;;9611:6;9537:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9537:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9537:81:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9537:81:15;;;;9360:277;9660:99;9669:9;9679:1;9669:12;;;;;;;;;;;;;;;;;;9683:1;:21;;;9706:37;9723:6;9731:1;9734:8;9706:16;:37::i;:::-;9745:13;;;;9660:99;;;;;;;;;;;;;;;;;;;;9745:13;-1:-1:-1;;;9745:13:15;;;;9660:99;;;;;;;;;;;;;8689:1085;;9787:22;;;;;-1:-1:-1;8238:3:15;;8199:1621;;;-1:-1:-1;9845:9:15;7982:1879;-1:-1:-1;;;;7982:1879:15:o;10228:974::-;10499:65;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;10499:65:15;;;;;;;10489:76;;;;;10466:20;;;10640:387;10661:7;:14;10657:1;:18;10640:387;;;10696:14;10713:50;10723:12;10737:4;10742:1;10737:7;;;;;;;;;;;;;;;;;;10746:4;10751:1;10746:7;;;;;;;;;;;;;;;;;;10755:4;10760:1;10755:7;;;;;;;;;;;;;;;;;;10713:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10713:50:15;;;;;;;;10696:67;;10798:10;-1:-1:-1;;;;;10785:23:15;:7;10793:1;10785:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10785:23:15;;10777:68;;;;;-1:-1:-1;;;;;10777:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10872:7;10880:1;10872:10;;;;;;;;;;;;;;;;;;10859:23;;10918:6;-1:-1:-1;;;;;10904:20:15;:7;10912:1;10904:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10904:20:15;;10896:52;;;;;-1:-1:-1;;;;;10896:52:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10980:23:15;;;;;;:11;:23;;;;;:35;;;10970:46;;:5;;:46;:9;:46;:::i;:::-;10962:54;-1:-1:-1;;10677:3:15;;10640:387;;;-1:-1:-1;11128:11:15;;:36;;;-1:-1:-1;;;;;;;;;;;11128:36:15;;;;;;;;;;;;;;;;;;;;;11107:67;;11170:3;;11107:58;;-1:-1:-1;;;;;11128:11:15;;;;:15;;:36;;;;;;;;;;;;:11;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;11128:36:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11128:36:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11128:36:15;11107:16;;;:58;:20;:58;:::i;:::-;:62;:67;:62;:67;:::i;:::-;11099:75;;11090:105;;;;;-1:-1:-1;;;;;11090:105:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10228:974;;;;;;;;:::o;11208:384::-;11332:14;;:::i;:::-;11349:77;;;;;;;;;11355:13;11349:77;;;;11370:14;11349:77;;;;11386:12;11349:77;;;;11400:12;11349:77;;;;11415:10;-1:-1:-1;;;;;11349:77:15;;;;11332:94;;11436:10;11452:8;11436:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11436:25:15;;;;;;;;;;;;;;;;;;;;;;11490:1;11471:6;:16;11478:8;11471:16;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11471:20:15;;;;;-1:-1:-1;;;;;11471:20:15;;;;;;;;;11506:79;11519:8;11529:13;11544:14;11560:12;11574:10;11506:79;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11506:79:15;-1:-1:-1;;;;;11506:79:15;;;;;;;;;;;;;;;;;;;11208:384;;;;;:::o;1345:142:30:-;1430:7;;;1454;;;;1447:15;;;11274:618:16;2567:11;;:27;;;-1:-1:-1;;;;;;;;;;;2567:27:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:11:16;;;;:15;;:27;;;;;;;;;;;;;:11;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:27:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:27:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:27:16;:32;2559:62;;;;;-1:-1:-1;;;;;2559:62:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11384:18;11405:34;11429:9;11405:23;:34::i;:::-;11457:17;;;;;;-1:-1:-1;11457:17:16;;;;;:26;;;:55;;-1:-1:-1;11487:16:16;;;;-1:-1:-1;;;11487:16:16;;;;:25;11457:55;11449:92;;;;;;;-1:-1:-1;;;;;11449:92:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11559:21;;11588:11;;;;11559:41;;;;;;-1:-1:-1;;;;;11588:11:16;;;11559:41;;;;;;:53;;;;:21;;;;;:28;;:41;;;;;;;;;;;;;;;:21;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;11559:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11559:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11559:41:16;:53;;;;11551:84;;;;;-1:-1:-1;;;;;11551:84:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11645:17;;;:28;;-1:-1:-1;;11645:28:16;;;;;;;;;;;;-1:-1:-1;;11683:28:16;-1:-1:-1;;;11683:28:16;;;;;;;;11721:27;;;;;;;;;;;;-1:-1:-1;11721:27:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11721:27:16;;;;;;;;;;;;;11645:28;11721:27;;;;;;;;;;;;;;;;;;;;;;:21;:27::i;:::-;11785:11;;11810;;;;11763:122;;11774:9;;11798:10;;-1:-1:-1;;;;;11810:11:16;11823:8;:61;;11859:25;11823:61;;;11834:22;11823:61;11763:122;;;;;;;;;;;;;;-1:-1:-1;;;;;11763:122:16;-1:-1:-1;;;;;11763:122:16;;;;;;-1:-1:-1;;;;;11763:122:16;-1:-1:-1;;;;;11763:122:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;11274:618;;:::o;1149:126:30:-;1209:7;1235:8;;;;1228:16;;;;-1:-1:-1;1261:7:30;;;1149:126::o;15070:122:15:-;15135:4;15158:22;;;:11;:22;;;;;;:27;;;15070:122::o;4162:389:16:-;4228:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4228:24:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4228:24:16;;;;;;;;;;;;;;;;;;;;;;;:11;:24::i;:::-;4338:8;;4311;;;;;-1:-1:-1;;;;;4311:8:16;4338;4299:21;;;:11;:21;;;;;:34;;:48;;;:38;:48;:::i;:::-;4274:8;;;;;-1:-1:-1;;;;;4274:8:16;;;4262:21;;;;:11;:21;;;;;;;;:34;;:85;;;;4433:8;;4406;;;;;;;4394:21;;:11;:21;;;;;;:34;;:48;;;:38;:48;:::i;:::-;4369:8;;;;;-1:-1:-1;;;;;4369:8:16;4357:21;;;;:11;:21;;;;;:34;;:85;;;;4452:21;;-1:-1:-1;;4483:22:16;;;4532:12;4515:14;;;;:29;4162:389::o;6998:808::-;7181:10;7167:633;7209:10;7197:9;:22;7193:1;:26;7167:633;;;-1:-1:-1;;;;;7260:26:16;;7240:17;7260:26;;;:18;:26;;;;;:29;;7287:1;;7260:29;;;;;;;;;;;;;;;;;;7324:20;;;:9;:20;;;;;;;7362:17;;;;7260:29;;-1:-1:-1;7324:20:16;7362:22;7358:432;;;7418:1;7408:7;:11;7404:219;;;7443:18;7464:33;7493:3;7464:24;7476:4;:11;;;7464:7;:11;;:24;;;;:::i;:33::-;7519:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7519:32:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7519:32:16;;;;;;;;;;;;;;;;;;;;;7443:54;;-1:-1:-1;7519:32:16;;7443:54;7519:11;:32::i;:::-;7573:12;;:31;;7590:13;7573:31;:16;:31;:::i;:::-;;7404:219;;7640:26;7661:4;7640:20;:26::i;:::-;7711:11;;7724;;;;7737;;;;;7689:86;;;;;;;;;;;;;-1:-1:-1;;;;;7724:11:16;;;7689:86;;;;7737:11;;7689:86;;;;;;;;;;;;;;;;;;7358:432;-1:-1:-1;;7221:3:16;;7167:633;;;;6998:808;;;;:::o;8416:1390::-;8708:8;;8575:7;;8685:64;;-1:-1:-1;;;;;8708:8:16;8718:7;8735:4;8742:6;8685:22;:64::i;:::-;8768:11;;:39;;;;;;-1:-1:-1;;;;;8768:39:16;;;;;;;;;:11;;;;;:31;;:39;;;;;;;;;;;;;;:11;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;8768:39:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8768:39:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8768:39:16;:48;8760:99;;;;-1:-1:-1;;;;;8760:99:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:46;;;-1:-1:-1;;;;;8938:46:16;;;;;;;;;;;;;;;;;;;;;;;8971:12;8938:46;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8938:46:16;;;;;;;8928:57;;;;;8995:17;;:::i;:::-;-1:-1:-1;9015:304:16;;;;;;;;;;;9072:12;9015:304;;;;-1:-1:-1;9015:304:16;;;;;;-1:-1:-1;;;;;9015:304:16;;;;;;;;;;;;;;;;;;;;;;;;;;9338:24;9015:304;9338:18;:24::i;:::-;-1:-1:-1;;;;;9439:26:16;;;;;;;:18;:26;;;;;;;;:33;;9407:29;;;:18;:29;;;;;:65;;;39:1:-1;23:18;;;45:23;;9482:42:16;;;;;;;;;;9566:26;;;;;;:18;:26;;;;;:33;;9534:29;;;:18;:29;;;;;:65;;;23:18:-1;;;45:23;;9609:42:16;;;;;;;;;;9661:20;;;:9;:20;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9661:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9661:27:16;;;-1:-1:-1;;;9661:27:16;-1:-1:-1;;9661:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9704:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9790:9:16;8416:1390;-1:-1:-1;;;;;8416:1390:16:o;8148:262::-;8288:6;8283:121;8304:7;:14;8300:1;:18;8283:121;;;8339:54;8349:7;8358;8366:1;8358:10;;;;;;;;;;;;;;;;;;8370:7;8378:1;8370:10;;;;;;;;;;;;;;;;;;8382:7;8390:1;8382:10;;;;;;;;;;;;;;;;;;8339:9;:54::i;:::-;-1:-1:-1;8320:3:16;;8283:121;;15507:659:15;15736:14;;15718;;:32;15710:55;;;;;-1:-1:-1;;;;;15710:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;15780:6;15775:385;15796:7;:14;15792:1;:18;15775:385;;;15831:17;15851:49;15861:6;15869;15877:7;15885:1;15877:10;;;;;;;;;;;;;;;;;;15889:7;15897:1;15889:10;;;;;;;;;15851:49;15914:22;;;;:11;:22;;;;;;;;:31;;;15987:18;;;:10;:18;;;;;;:25;;15959;;;:14;:25;;;;;:53;;;16026:18;;;39:1:-1;23:18;;45:23;;16026:34:15;;;;;;;;16100:21;;16129:10;;15831:69;;-1:-1:-1;16074:75:15;;15831:69;;-1:-1:-1;;;;;16100:21:15;;:28;;16129:7;;16137:1;;16129:10;;;;;;;;;;;;;;16100:40;;;;;;;;;;;;;-1:-1:-1;;;;;16100:40:15;-1:-1:-1;;;;;16100:40:15;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16100:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16100:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16100:40:15;:48;;16144:4;16100:48;;16074:14;:75::i;:::-;-1:-1:-1;15812:3:15;;15775:385;;14173:395:16;14259:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14259:27:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14259:27:16;;;;;;;;;;;;;;;;;;;;;;;:21;:27::i;:::-;14315:8;;14337:11;;14296:53;;-1:-1:-1;;;;;14315:8:16;;14325:10;;14296:18;:53::i;:::-;14386:11;;14399;;;;;14412;;;;14364:86;;;;;;;;;;;;;-1:-1:-1;;;;;14399:11:16;;;14364:86;;;;14412:11;;14364:86;;;;;;;;;;;;;;;;;;;;;14460:27;14477:9;14460:16;:27::i;:::-;14497;14514:9;14497:16;:27::i;:::-;-1:-1:-1;14541:20:16;;;;:9;:20;;;;;14534:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14534:27:16;;;;;;;-1:-1:-1;;14534:27:16;;;14173:395::o;6401:569:15:-;6521:11;;:33;;;-1:-1:-1;;;;;;;;;;;6521:33:15;;;;;;;;;;;;;;;;;;;;;6501:17;;-1:-1:-1;;;;;6521:11:15;;:15;;:33;;;;;;;;;;;:11;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6521:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6521:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6521:33:15;6581:11;;:40;;;-1:-1:-1;;;;;;;;;;;6581:40:15;;6521:33;6581:40;;;;;;;;;;;;;;;;;;6521:33;;-1:-1:-1;6564:14:15;;-1:-1:-1;;;;;6581:11:15;;;;:15;;:40;;;;;6521:33;;6581:40;;;;;;:11;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6581:40:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6581:40:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6581:40:15;;-1:-1:-1;6650:1:15;6635:16;;6631:116;;;6676:9;:25;-1:-1:-1;6676:25:15;6667:69;;;;;-1:-1:-1;;;;;6667:69:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6772:1;6760:9;:13;:30;;;;6789:1;6777:9;:13;6760:30;6756:208;;;6815:22;;;;6806:64;;;;;-1:-1:-1;;;;;6806:64:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6907:8;;6884:69;;-1:-1:-1;;;;;6907:8:15;6917:9;6936:4;6943:9;6884:22;:69::i;1349:467:29:-;1782:7;1770:20;1804:7;1349:467;:::o;2911:292:16:-;3056:8;:17;;-1:-1:-1;;;;;3056:17:16;;;-1:-1:-1;;3056:17:16;;;;;;;3083:21;:56;;;;;;;;;;;;;;;3149:11;:47;;;;;;;;;;;2911:292::o;16173:470:15:-;16290:10;16303:18;;;:10;:18;;;;;:25;:32;;16333:1;16303:32;:29;:32;:::i;:::-;16345:10;16358:25;;;:14;:25;;;;;;;;;16409:18;;;:10;:18;;;;;:25;;16290:45;;-1:-1:-1;16358:25:15;;16290:45;;16409:25;;;;;;;;;;;;;;16394:40;;16472:4;16444:10;:18;16455:6;16444:18;;;;;;;;;;;16463:5;16444:25;;;;;;;;;;;;;;;;;;;;;:32;;;;16487:18;;;:10;:18;;;;;;:27;;;;;-1:-1:-1;;16487:27:15;;;:::i;:::-;-1:-1:-1;16552:1:15;16524:25;;;:14;:25;;;;;;;;:29;;;16572:20;;;;;;:28;;;;16610:22;;;:11;:22;;;;;:26;;;;-1:-1:-1;;16173:470:15:o;7253:312::-;7350:7;7404:8;7395:6;:17;7377:6;:13;:36;;7369:45;;;;;;;;-1:-1:-1;;7492:30:15;7508:4;7492:30;7486:37;;7253:312::o;928:162:25:-;1015:5;-1:-1:-1;;;;;1002:28:25;;1031:2;1035:6;1002:40;;;;;;;;;;;;;-1:-1:-1;;;;;1002:40:25;-1:-1:-1;;;;;1002:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:40:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1002:40:25;;;;1054:14;:12;:14::i;:::-;1046:40;;;;;;;-1:-1:-1;;;;;1046:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:162;;;:::o;218:420:30:-;278:9;520:7;;516:46;;;-1:-1:-1;550:1:30;543:8;;516:46;-1:-1:-1;576:7:30;;;581:2;576;:7;600:6;;;;;;;;:12;593:20;;;728:301;788:7;1020:2;1015;:7;;;;;;;;;728:301;-1:-1:-1;;;728:301:30:o;10214:512:16:-;10304:13;10354:20;;;:9;:20;;;;;10389:24;10364:9;10389:13;:24::i;:::-;10388:25;10384:247;;;10437:11;;;;-1:-1:-1;;;;;10437:11:16;10452:10;10437:25;10429:66;;;;;-1:-1:-1;;;;;10429:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10535:11;;:34;;;-1:-1:-1;;;;;;;;;;;10535:34:16;;;;;;;;;;;;;;;;;;;;;10572:12;;-1:-1:-1;;;;;10535:11:16;;:15;;:34;;;;;;;;;;;:11;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;10535:34:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10535:34:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10535:34:16;10517:15;;;;:52;:67;10509:111;;;;;-1:-1:-1;;;;;10509:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;10648:17;;;;:22;10640:58;;;;;-1:-1:-1;;;;;10640:58:16;;;;;;;;;;;;;;;;;;;;;;;;;;;3511:646;3581:1;:14;;;3577:574;;;3689:8;;3661;;;;-1:-1:-1;;;;;3649:21:16;3689:8;3649:21;;;:11;:21;;;;;:35;;;:49;;;:39;:49;:::i;:::-;3623:8;;;;-1:-1:-1;;;;;3611:21:16;;;;;;;:11;:21;;;;;;;;:35;;;;:87;;;;3790:8;;3762;;;;3750:21;;;;;:11;:21;;;;;:35;;;;:49;;;:39;:49;:::i;:::-;3724:8;;;;-1:-1:-1;;;;;3712:21:16;;;;;:11;:21;;;;;:35;;:87;3857:8;;3834:18;;:32;;;:22;:32;:::i;:::-;3813:18;:53;3577:574;;;3971:8;;3945;;;;-1:-1:-1;;;;;3933:21:16;3971:8;3933:21;;;:11;:21;;;;;:33;;;:47;;;:37;:47;:::i;:::-;3909:8;;;;-1:-1:-1;;;;;3897:21:16;;;;;;;:11;:21;;;;;;;;:33;;;;:83;;;;4068:8;;4042;;;;4030:21;;;;;:11;:21;;;;;:33;;;;:47;;;:37;:47;:::i;:::-;4006:8;;;;-1:-1:-1;;;;;3994:21:16;;;;;:11;:21;;;;;:33;;:83;4131:8;;4110:16;;:30;;;:20;:30;:::i;:::-;4091:16;:49;3511:646;:::o;4816:852::-;4934:8;;;;-1:-1:-1;;;;;4922:21:16;;;;;:11;:21;;;;;:32;:46;;4959:8;4922:46;:36;:46;:::i;:::-;4899:8;;;;-1:-1:-1;;;;;4887:21:16;;;;;;;:11;:21;;;;;;;;:81;;;;5025:8;;;;5013:21;;;;;:11;:21;;;;:32;:46;;5050:8;5013:46;:36;:46;:::i;:::-;4990:8;;;;-1:-1:-1;;;;;4978:21:16;;;;;:11;:21;;;;;:81;5073:13;;;;5069:593;;;5150:8;;;;-1:-1:-1;;;;;5138:21:16;;;;;:11;:21;;;;;:33;;;:47;;5176:8;5138:47;:37;:47;:::i;:::-;5114:8;;;;-1:-1:-1;;;;;5102:21:16;;;;;;;:11;:21;;;;;;;;:33;;;;:83;;;;5247:8;;;;5235:21;;;;;:11;:21;;;:33;;:47;;5273:8;5235:47;:37;:47;:::i;:::-;5211:8;;;;-1:-1:-1;;;;;5199:21:16;;;;;:11;:21;;;;;:33;;:83;5315:16;;:30;;5336:8;5315:30;:20;:30;:::i;:::-;5296:16;:49;5069:593;;;5366:1;:14;;;5362:300;;;5446:8;;;;-1:-1:-1;;;;;5434:21:16;;;;;:11;:21;;;;;:35;;;:49;;5474:8;5434:49;:39;:49;:::i;:::-;5408:8;;;;-1:-1:-1;;;;;5396:21:16;;;;;;;:11;:21;;;;;;;;:35;;;;:87;;;;5547:8;;;;5535:21;;;;;:11;:21;;;:35;;:49;;5575:8;5535:49;:39;:49;:::i;:::-;5509:8;;;;-1:-1:-1;;;;;5497:21:16;;;;;:11;:21;;;;;:35;;:87;5619:18;;:32;;5642:8;5619:32;:22;:32;:::i;:::-;5598:18;:53;4816:852;;:::o;1093:194:25:-;1185:50;;;;;;-1:-1:-1;;;;;1185:50:25;;;;;;;;;;;;;;;;;;;;;;:32;;;;;;:50;;;;;-1:-1:-1;;1185:50:25;;;;;;;;-1:-1:-1;1185:32:25;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;1185:50:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1185:50:25;;;;1247:14;:12;:14::i;:::-;1239:44;;;;;;;-1:-1:-1;;;;;1239:44:25;;;;;;;;;;;;;;;;;;;;;;;;;;;3263:242:16;3398:8;;3373;;;;-1:-1:-1;;;;;3361:21:16;3398:8;3361:21;;;:11;:21;;;;;:32;:46;;;:36;:46;:::i;:::-;3338:8;;;;-1:-1:-1;;;;;3326:21:16;;;;;;;:11;:21;;;;;;;;:81;;;;3489:8;;3464;;;;3452:21;;;;;:11;:21;;;;;;:32;:46;;;:36;:46;:::i;:::-;3429:8;;;;;-1:-1:-1;;;;;3417:21:16;;;;;:11;:21;;;;;:81;3263:242::o;4556:253::-;4698:8;;4671;;;;-1:-1:-1;;;;;4659:21:16;4698:8;4659:21;;;:11;:21;;;;;:34;;;:48;;;:38;:48;:::i;:::-;4634:8;;;;-1:-1:-1;;;;;4622:21:16;;;;;;;:11;:21;;;;;;;;:34;;;;:85;;;;4793:8;;4766;;;;4754:21;;;;;:11;:21;;;;;:34;;;;:48;;;:38;:48;:::i;:::-;4729:8;;;;;-1:-1:-1;;;;;4717:21:16;;;;;:11;:21;;;;;:34;;:85;4556:253::o;12788:615::-;12866:14;12883:20;;;:9;:20;;;;;;;;:27;;;12939:18;:29;;;;;;-1:-1:-1;;;;;12883:27:16;;;13001:26;;;:18;:26;;;;;;:33;;12883:27;;12939:29;;-1:-1:-1;;13001:37:16;;;12866:14;13001:26;:37;;13071:43;;;;;;;;;;;;;;13048:66;;13179:12;13137:18;:26;13156:6;-1:-1:-1;;;;;13137:26:16;-1:-1:-1;;;;;13137:26:16;;;;;;;;;;;;13164:11;13137:39;;;;;;;;;;;;;;;;;;;;;:54;;;;-1:-1:-1;;;;;13201:26:16;;;;:18;:26;;;;;;:43;;13228:15;;13201:43;;;;;;;;;;;;;;;;;:47;;;;-1:-1:-1;;;;;13259:26:16;;;;:18;:26;;;;;;:35;;;;;-1:-1:-1;;13259:35:16;;;:::i;:::-;-1:-1:-1;13311:29:16;;;;:18;:29;;;;;;13304:36;;;13350:32;;;;;;:46;-1:-1:-1;;12788:615:16:o;13552:::-;13630:14;13647:20;;;:9;:20;;;;;;;;:27;;;13703:18;:29;;;;;;-1:-1:-1;;;;;13647:27:16;;;13765:26;;;:18;:26;;;;;;:33;;13647:27;;13703:29;;-1:-1:-1;;13765:37:16;;;13630:14;13765:26;:37;;13835:43;;;;;;;;;;;;;;13812:66;;13943:12;13901:18;:26;13920:6;-1:-1:-1;;;;;13901:26:16;-1:-1:-1;;;;;13901:26:16;;;;;;;;;;;;13928:11;13901:39;;;;;;;;;;;;;;;;;;;;;:54;;;;-1:-1:-1;;;;;13965:26:16;;;;:18;:26;;;;;;:43;;13992:15;;13965:43;;;;;;;;;;;;;;;;;:47;;;;-1:-1:-1;;;;;14023:26:16;;;;:18;:26;;;;;;:35;;;;;-1:-1:-1;;14023:35:16;;;:::i;:::-;-1:-1:-1;14075:29:16;;;;:18;:29;;;;;;14068:36;;;14114:32;;;;;;:46;-1:-1:-1;;13552:615:16:o;339:586:25:-;391:4;;512:14;571:36;;;;660:4;655:163;;;;505:385;;571:36;601:1;586:16;;571:36;;655:163;736:4;731:3;726;711:30;809:3;803:10;788:25;;505:385;-1:-1:-1;905:16:25;;;-1:-1:-1;339:586:25;:::o;292:17369:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;292:17369:15;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;292:17369:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;292:17369:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"../utils/Initializable.sol\";\nimport \"./XyStakingModel.sol\";\nimport \"../IXyRequester.sol\";\n\n /**\n    @title XyStakingConsensus\n    @dev Manages the Stake for multiple clients in a decentralized consensus \n    system to trustlessly answer requests\n  */\ncontract XyStakingConsensus is Initializable, XyStakingModel {\n    using SafeMath for uint;\n    \n    /** STRUCTS */\n    struct Block {\n        bytes32 previousBlock;\n        bytes32 supportingData;\n        uint stakingBlock;\n        uint createdAt;\n        address creator;\n    }\n\n    struct Request {\n        uint xyoBounty;\n        uint weiMining;\n        uint createdAt;\n        uint responseBlockNumber;\n        address requestSender;\n        uint8 requestType;\n    }\n\n    // the array of request ids\n    bytes32[] public requestChain;\n    // the requests in the requestChain\n    mapping(bytes32 => Request) public requestsById; \n    // the array of block ids\n    bytes32[] public blockChain; \n    // The blocks in the blockChain\n    mapping(bytes32 => Block) public blocks; \n\n    /** EVENTS */\n    event RequestSubmitted(\n        bytes32 request,\n        uint xyoBounty,\n        uint weiMining,\n        address requester,\n        address xyoSender,\n        uint8 requestType\n    );\n\n    event BlockCreated(\n        bytes32 blockHash,\n        bytes32 previousBlock,\n        bytes32 supportingData,\n        uint createdAtBlock,\n        address blockProducer\n    );\n\n    event WithdrawClaimed(\n        address beneficiary,\n        uint amount,\n        uint stakerStake\n    );\n\n    event Response (\n        bytes32 request,\n        uint responseBlock,\n        uint result,\n        uint8 responseType\n    );\n\n    // mapping from stake id to bond id\n    mapping (bytes32 => bytes32) public bondedStake;\n    // mapping from bond id to stake ids\n    mapping (bytes32 => bytes32[]) public bondStakes;\n    // mapping from stake id to index in bond stake\n    mapping (bytes32 => uint) public bondStakeIndex;\n\n    /**\n        @param _token - The ERC20 token to stake with \n        @param _blockProducerContract - The block producers \n        @param _governanceContract - The contract that governs the blockProducer and actions of the system\n    */\n    function initialize(\n        address _token,\n        address _blockProducerContract,\n        address _governanceContract\n    )\n        initializer public\n    {\n        init(_token, _blockProducerContract, _governanceContract);\n    }\n\n    /** \n        @return the latest block submitted to the blockChain \n    */\n    function getLatestBlock() \n        public \n        view \n        returns (bytes32) \n    {\n        if (blockChain.length == 0) {\n            return 0x0;\n        }\n        return blockChain[blockChain.length-1];\n    }\n\n    /**\n        @dev Withdraw reward balance can post same params via raw\n        @param xyoBounty bounty for request\n    */\n    function withdrawRewardsRequest \n    (\n        uint xyoBounty\n    ) \n        public\n        payable\n        returns (bytes32)\n    {\n        bytes32 requestId = keccak256(abi.encodePacked(msg.sender, xyoBounty, block.number));\n        submitRequest(requestId, xyoBounty, msg.sender, uint8(IXyRequester.RequestType.WITHDRAW));\n        return requestId;\n    }\n\n    /** \n        Implements IApprovalRecipient allows approveAndCall in one transaction\n    */\n    function receiveApproval(\n        address _spender, \n        uint256 _value, \n        address,\n        bytes calldata _extraData\n    ) \n        external \n    {\n        require (msg.sender == xyoToken, \"sender must be token\");\n        (uint method, bytes memory data) = abi.decode(_extraData, (uint, bytes));\n        \n        if (method == 1) {\n            (address staker, address stakee) = abi.decode(data, (address, address));\n            stakeFrom(_spender, staker, stakee, _value);\n        } else if (method == 2) {\n            ( bytes32 request, uint xyoBounty, address xyoSender, uint8 requestType) = abi.decode(data, (bytes32, uint, address, uint8));\n            submitRequestFrom(_spender, request, xyoBounty, xyoSender, requestType);\n        } else if (method == 3) {\n            (address[] memory stakers, address[] memory stakees, uint[] memory amounts) = abi.decode(data, (address[], address[], uint[]));\n            stakeMultiple(_spender, stakers, stakees, amounts);\n        } else if (method == 4) {\n            (bytes32 bondId, address staker, address[] memory stakees, uint[] memory amounts) = abi.decode(data, (bytes32, address, address[], uint[]));\n            _stakeAndBond(bondId, _spender, staker, stakees, amounts);\n        }\n    }\n\n    /**\n        @dev Escrow eth and xyo, making sure it covers the answer mining cost\n        Stores new request in request pool\n        @param request How to uniquely identify a request\n        @param xyoBounty bounty for request\n        @param xyoSender who to deduct the xyo from for mining cost\n        @param requestType based on the type we know which callback to call (string or bool)\n    */\n    function submitRequest\n    (\n        bytes32 request, \n        uint xyoBounty,\n        address xyoSender, \n        uint8 requestType\n    ) \n        public\n        payable\n    {\n        submitRequestFrom(msg.sender, request, xyoBounty, xyoSender, requestType);\n    }\n\n    function submitRequestFrom\n    (   \n        address from,\n        bytes32 request, \n        uint xyoBounty,\n        address xyoSender, \n        uint8 requestType\n    )\n        public \n        payable\n    {\n        require (requestsById[request].createdAt == 0, \"Duplicate request submitted\");\n\n        _requireFeesAndTransfer(xyoSender, xyoBounty);\n\n        Request memory q = Request (\n            xyoBounty,      // bounty\n            msg.value,      // wei for mining\n            block.number,   // created at\n            0,              // response block num           \n            from,           // requestSender (receives response cb)\n            requestType     // type of request\n        );\n\n        requestsById[request] = q;\n        requestChain.push(request);\n\n        emit RequestSubmitted(request, xyoBounty, msg.value, from, xyoSender, requestType);\n    }\n\n    /**\n        Will verify proper mining fees have been applied\n        @param xyoSender who to transfer the fees from (must have approved this contract)\n        @param xyoBounty the amount the xyoSender is paying for this request\n    */\n    function _requireFeesAndTransfer(address xyoSender, uint xyoBounty) \n        private \n    {\n        uint weiMiningMin = govContract.get(\"xyWeiMiningMin\");\n        uint bountyMin = govContract.get(\"xyXYORequestBountyMin\");\n        if (weiMiningMin > 0) {\n            require (msg.value >= weiMiningMin, \"Not enough wei to cover mining\");\n        }\n        if (xyoBounty > 0 || bountyMin > 0) {\n            require (xyoBounty >= bountyMin, \"XYO Bounty less than minimum\");\n            SafeERC20.transferFrom(xyoToken, xyoSender, address(this), xyoBounty);\n        }\n    }\n\n    /**\n        Requires the length of bytes is more than starting point + 32\n        returns 32 bytes memory (reversed to uint) at start + 32 to memory[start]\n        @param _bytes the bytes passed to pull uint from\n        @param _start index in bytes to return uint\n     */\n    function _toUintFromBytes(bytes memory _bytes, uint _start, uint bytesLen) private pure returns (uint256) {\n        require(_bytes.length >= (_start + bytesLen));\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    /** \n        @dev Calls Request interface submitResponse function for each answer.\n        Use for estimating gas of a request\n        @param _requests the requests queried\n        @param responses the response data of all the requests\n        @return The weiMining for submitting the new block\n        Will revert if the request does not exist, or the withdraw request is more htna the staker stake\n    */\n    function handleResponses\n    (\n        bytes32[] memory _requests, \n        bytes memory responses\n    )\n        internal \n        returns (uint)\n    {\n        uint byteOffset = 0;\n        uint weiMining = 0;\n        for (uint i = 0; i < _requests.length; i++) {\n            Request storage q = requestsById[_requests[i]];\n            require (q.createdAt > 0, \"Passed a request that does not exist\");\n            uint numBytes = q.requestType == uint8(IXyRequester.RequestType.BOOL_CALLBACK)\n                         || q.requestType == uint8(IXyRequester.RequestType.BOOL) ? 1 : 32;\n\n            q.responseBlockNumber = numBlocks().add(1);\n            weiMining = weiMining.add(q.weiMining);\n\n            if (q.requestType == uint8(IXyRequester.RequestType.WITHDRAW)) {\n                uint amount = _toUintFromBytes(responses, byteOffset, numBytes);\n                require (amount <= totalStakeAndUnstake(q.requestSender), \"Withdraw amount more than total staker's stake\");\n                emit WithdrawClaimed(q.requestSender, amount, totalStakeAndUnstake(q.requestSender));\n                SafeERC20.transfer(xyoToken, q.requestSender, amount);\n            } else {\n                bytes memory result = new bytes(numBytes);\n                for (uint j = 0; j < numBytes; j++) {\n                    result[j] = responses[byteOffset + j];\n                }\n                if (q.requestType == uint8(IXyRequester.RequestType.BOOL_CALLBACK) \n                    || q.requestType == uint8(IXyRequester.RequestType.UINT_CALLBACK)) {\n                    IXyRequester(q.requestSender).submitResponse(_requests[i], q.requestType, result);\n                } \n                emit Response(_requests[i], q.responseBlockNumber, _toUintFromBytes(result, 0, numBytes), q.requestType);\n            }\n            byteOffset += numBytes;\n        }\n        \n        return weiMining;\n    }\n\n    /** \n        @dev checks a message hash was signed by a list of signers via their sigs\n        @param messageHash The hash of the message that was signed\n        @param signers The in-order list of signers of the message\n        @param sigR R values in signatures\n        @param sigS S values in signatures\n        @param sigV V values in signatures\n    */\n    function checkSigsAndStakes\n    (\n        bytes32 messageHash,\n        address[] memory signers,\n        bytes32[] memory sigR,\n        bytes32[] memory sigS,\n        uint8[] memory sigV\n    )\n        view\n        internal \n    {\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash));\n        address lastStakee = address(0);\n        uint stake = 0;\n        for (uint i = 0; i < signers.length; i++) {\n            address signer = ecrecover(prefixedHash, sigV[i], sigR[i], sigS[i]);\n            require(signers[i] > lastStakee , \"Signers array must be ascending\");\n            lastStakee = signers[i];\n            require(signers[i] == signer, \"Signature mis-match\");\n            stake = stake.add(stakeeStake[lastStakee].activeStake);\n        }\n        // check sufficient stake by stakees subitted\n        require (stake > totalActiveStake.mul(govContract.get(\"xyStakeSuccessPct\")).div(100), \"Not enough stake\");\n    }\n\n    function _createBlock(bytes32 previousBlock, bytes32 newBlock, bytes32 supportingData, uint stakingBlock) private {\n        Block memory b = Block(previousBlock, supportingData, stakingBlock, block.number,  msg.sender);\n        blockChain.push(newBlock);\n        blocks[newBlock] = b;\n        emit BlockCreated(newBlock, previousBlock, supportingData, block.number, msg.sender);\n    }\n\n    /**\n        Submit a new block to the consensus blockChain. Verifies stake in consensus is over 51% of the network. \n        calls requests' callbacks with responses.  Creates new block and returns weiMining for successful creation.\n        @param previousBlock the prior block to maintain the \n        @param stakingBlock the block number diviners get staking data for\n        @param _requests list of the request ids (minus first 2 bytes)\n        @param supportingData the hash of the supporting block data\n        @param responses byte array of responses\n        @param signers Stakees, aka diviners and must be passed in ascending order to check for dups\n        @param sigR R values in signatures\n        @param sigS S values in signatures\n        @param sigV V values in signatures\n        @return The hash of the new block\n    */\n    function submitBlock\n    (\n        bytes32 previousBlock,\n        uint stakingBlock,\n        bytes32[] memory _requests,\n        bytes32 supportingData,\n        bytes memory responses,\n        address[] memory signers,\n        bytes32[] memory sigR,\n        bytes32[] memory sigS,\n        uint8[] memory sigV\n    ) \n        public \n        returns (bytes32)\n    {\n        require (blockProducerContract.exists(msg.sender), \"Only approved BP can submit\");\n        require (previousBlock == getLatestBlock(), \"Incorrect previous block\");\n        require (_requests.length > 0, \"No requests in block\");\n        \n        bytes32 newBlock = keccak256(abi.encodePacked(previousBlock, stakingBlock, _requests, supportingData, responses));\n        uint weiMining = handleResponses(_requests, responses);\n        msg.sender.transfer(weiMining);\n\n        checkSigsAndStakes(newBlock, signers, sigR, sigS, sigV);\n        _createBlock(previousBlock, newBlock, supportingData, stakingBlock);\n\n        return newBlock;\n    }\n\n    /**\n        Returns a block for a given request id or a undefined block\n        @param requestId the block this request was responded on\n    */\n    function blockForRequest(bytes32 requestId) \n        public view \n        returns (\n            bytes32 previousBlock,\n            bytes32 supportingData,\n            uint stakingBlock,\n            uint createdAt,\n            address creator\n        ) \n    {\n        Request memory r = requestsById[requestId];\n        if (r.responseBlockNumber > 0) {\n            bytes32 blockId = blockChain[r.responseBlockNumber.sub(1)];\n            if (blockId != 0) {\n                previousBlock = blocks[blockId].previousBlock;\n                supportingData = blocks[blockId].supportingData;\n                stakingBlock = blocks[blockId].stakingBlock;\n                createdAt = blocks[blockId].createdAt;\n                creator = blocks[blockId].creator;\n            }\n        }\n    }\n\n    /**\n        Returns supporting data for a given request id\n        @param requestId the block this request was responded on\n        @return content addressable hash of the data\n    */\n    function supportingDataForRequest(bytes32 requestId) public view returns (bytes32 supportingData) {\n        (,supportingData,,,) = blockForRequest(requestId);\n    }\n\n    function numRequests() public view returns (uint) {\n        return requestChain.length;\n    }\n    \n    function numBlocks() public view returns (uint) {\n        return blockChain.length;\n    }\n\n    /* Network Staking Support */\n\n    /**\n        Called from StakingModel base class to see if this is bonded stake\n    */\n    function isBondedStake(bytes32 stakingId) internal view returns (bool) {\n        return bondedStake[stakingId] != 0;\n    }\n\n    /**\n        stakes a bonded stake\n        @param bondId - the bond id to ensure the correct stake\n        @param issuer - Who provides the xyo\n        @param staker - the beneficiary of the stake\n        @param stakees - the stakees to stake\n        @param amounts - the amounts to stake by stakee\n    */\n    function _stakeAndBond (\n        bytes32 bondId, \n        address issuer, \n        address staker, \n        address[] memory stakees, \n        uint[] memory amounts\n    ) \n        private \n    {\n        require(stakees.length == amounts.length, \"bad inputs\");\n        for (uint i = 0; i < stakees.length; i++) {\n            bytes32 stakingId = stakeFrom(issuer, staker, stakees[i], amounts[i]);\n            bondedStake[stakingId] = bondId;\n            bondStakeIndex[stakingId] = bondStakes[bondId].length;\n            bondStakes[bondId].push(stakingId);\n            _activateStake(stakingId, blockProducerContract.exists(stakees[i]) != true);\n        }\n    } \n\n    function _removeBondedStake(\n        bytes32 bondId, \n        bytes32 stakingId \n    )\n        private\n    {\n        uint lastI = bondStakes[bondId].length.sub(1);\n        uint index = bondStakeIndex[stakingId];\n\n        bytes32 last = bondStakes[bondId][lastI];\n        bondStakes[bondId][index] = last;\n\n        bondStakes[bondId].length--;\n        bondStakeIndex[stakingId] = 0;\n        \n        bondStakeIndex[last] = index;\n        bondedStake[stakingId] = 0;\n    }\n\n    /**\n        Unstakes/withdraws to bonded stake\n        @param bondId - the bond id to ensure the correct stake\n        @param stakingId - the id of the stake to withdraw to bond contract\n    */\n    function unstakeBonded (\n        bytes32 bondId, \n        bytes32 stakingId\n    ) \n        external \n    {\n        address bondContract = address(govContract.get('XyBondContract'));\n        require(msg.sender == bondContract, \"only from bond contract\");\n        require(bondId != 0 && bondId == bondedStake[stakingId], \"Stake not bonded to this bond\");\n        Stake storage data = stakeData[stakingId];\n        if (data.unstakeBlock==0) {\n            updateCacheOnUnstake(data);\n            emit StakeEvent(stakingId, data.amount, data.staker, data.stakee, StakeTransition.UNSTAKED);\n        }\n        _removeBondedStake(bondId, stakingId);\n        _withdrawStakeData(stakingId, data);\n    }\n\n    function numBondStakes(bytes32 bondId) public view returns(uint) {\n        return bondStakes[bondId].length;\n    }\n}",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "1": {
      "links": {},
      "events": {},
      "address": "0x0242514106114DEaA99Fd81574142c36Edb03B6D",
      "transactionHash": "0xe139dda3fda0431e31808648140c4a5b0a7e7bfa9ec6f0ddcff3589b6ff79106",
      "updated_at": 1555605742345
    },
    "42": {
      "links": {},
      "events": {},
      "address": "0x1a2C4a6Ffd72848E7bD63d2177c29a0aC80c6386",
      "transactionHash": "0x30876367b283daea40cf2893c7871ad7c00aad49d1deadfa2556251c2ca866eb",
      "updated_at": 1555545130803
    }
  },
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-02T01:23:44.891Z",
  "devdoc": {
    "details": "Manages the Stake for multiple clients in a decentralized consensus  system to trustlessly answer requests",
    "methods": {
      "blockForRequest(bytes32)": {
        "params": {
          "requestId": "the block this request was responded on"
        }
      },
      "cooldownStake(bytes32)": {
        "details": "Mark stake as cooled down or activated cooled down stake is for non-block producers only",
        "params": {
          "stakingId": "- the tokenId of the staking token"
        }
      },
      "getLatestBlock()": {
        "return": "the latest block submitted to the blockChain "
      },
      "initialize(address,address,address)": {
        "params": {
          "_blockProducerContract": "- The block producers ",
          "_governanceContract": "- The contract that governs the blockProducer and actions of the system",
          "_token": "- The ERC20 token to stake with "
        }
      },
      "resolveGovernanceAction(address,uint256,uint256)": {
        "params": {
          "batchSize": "if batchable action, batchSize",
          "stakee": "the staked item receiving action",
          "startIndex": "if a batchable action, where to start"
        }
      },
      "stake(address,uint256)": {
        "details": "This contract must be approved to transfers by holder",
        "params": {
          "amount": "- the amount to stake",
          "stakee": "- the stakable address "
        }
      },
      "submitBlock(bytes32,uint256,bytes32[],bytes32,bytes,address[],bytes32[],bytes32[],uint8[])": {
        "params": {
          "_requests": "list of the request ids (minus first 2 bytes)",
          "previousBlock": "the prior block to maintain the ",
          "responses": "byte array of responses",
          "sigR": "R values in signatures",
          "sigS": "S values in signatures",
          "sigV": "V values in signatures",
          "signers": "Stakees, aka diviners and must be passed in ascending order to check for dups",
          "stakingBlock": "the block number diviners get staking data for",
          "supportingData": "the hash of the supporting block data"
        },
        "return": "The hash of the new block"
      },
      "submitRequest(bytes32,uint256,address,uint8)": {
        "details": "Escrow eth and xyo, making sure it covers the answer mining cost Stores new request in request pool",
        "params": {
          "request": "How to uniquely identify a request",
          "requestType": "based on the type we know which callback to call (string or bool)",
          "xyoBounty": "bounty for request",
          "xyoSender": "who to deduct the xyo from for mining cost"
        }
      },
      "supportingDataForRequest(bytes32)": {
        "params": {
          "requestId": "the block this request was responded on"
        },
        "return": "content addressable hash of the data"
      },
      "unstake(bytes32)": {
        "params": {
          "stakingId": "- the tokenId of the staking token"
        }
      },
      "unstakeBonded(bytes32,bytes32)": {
        "params": {
          "bondId": "- the bond id to ensure the correct stake",
          "stakingId": "- the id of the stake to withdraw to bond contract"
        }
      },
      "withdrawManyStake(bytes32[])": {
        "params": {
          "stakingIds": "- Ids to withdraw"
        }
      },
      "withdrawRewardsRequest(uint256)": {
        "details": "Withdraw reward balance can post same params via raw",
        "params": {
          "xyoBounty": "bounty for request"
        }
      },
      "withdrawStake(bytes32)": {
        "params": {
          "stakingId": "- the id of the stake to remove"
        }
      }
    },
    "title": "XyStakingConsensus"
  },
  "userdoc": {
    "methods": {
      "blockForRequest(bytes32)": {
        "notice": "Returns a block for a given request id or a undefined block"
      },
      "getAvailableStakeeUnstake(address)": {
        "notice": "Get the available unstake, counting only stakes that can be withdrawn "
      },
      "getAvailableStakerUnstake(address)": {
        "notice": "Get the available unstake, counting only stakes that can be withdrawn "
      },
      "numStakerStakes(address)": {
        "notice": "Public getters "
      },
      "receiveApproval(address,uint256,address,bytes)": {
        "notice": "Implements IApprovalRecipient allows approveAndCall in one transaction"
      },
      "resolveGovernanceAction(address,uint256,uint256)": {
        "notice": "Call this when it's time to resolve a passed governance action"
      },
      "stake(address,uint256)": {
        "notice": "Create new stake on a stakee"
      },
      "submitBlock(bytes32,uint256,bytes32[],bytes32,bytes,address[],bytes32[],bytes32[],uint8[])": {
        "notice": "Submit a new block to the consensus blockChain. Verifies stake in consensus is over 51% of the network.  calls requests' callbacks with responses.  Creates new block and returns weiMining for successful creation."
      },
      "supportingDataForRequest(bytes32)": {
        "notice": "Returns supporting data for a given request id"
      },
      "unstake(bytes32)": {
        "notice": "unstake a specific previous stake "
      },
      "unstakeBonded(bytes32,bytes32)": {
        "notice": "Unstakes/withdraws to bonded stake"
      },
      "withdrawManyStake(bytes32[])": {
        "notice": "Withdraw a batch of passed stake"
      },
      "withdrawStake(bytes32)": {
        "notice": "Withdraw a single stake by stakingId, removes stake"
      }
    }
  }
}